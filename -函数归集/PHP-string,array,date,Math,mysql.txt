

//===== PHP 相关
		http://www.w3school.com.cn/php/php_ref_array.asp	php函数w3c参考手册
		Array
		Calendar
		Date
		Directory
		Error
		Filesystem
		Filter
		FTP
		HTTP
		LibXML
		Mail
		Math
		MySQL
		SimpleXML
		String
		XML Parser
		Zip
		杂项函数


	//--- Array 函数
		array()	创建数组。
		array_change_key_case()	把数组中所有键更改为小写或大写。
		array_chunk()	把一个数组分割为新的数组块。
		array_column()	返回输入数组中某个单一列的值。
		array_combine()	通过合并两个数组来创建一个新数组。
		array_count_values()	用于统计数组中所有值出现的次数。
		array_diff()	比较数组，返回差集（只比较键值）。
		array_diff_assoc()	比较数组，返回差集（比较键名和键值）。
		array_diff_key()	比较数组，返回差集（只比较键名）。
		array_diff_uassoc()	比较数组，返回差集（比较键名和键值，使用用户自定义的键名比较函数）。
		array_diff_ukey()	比较数组，返回差集（只比较键名，使用用户自定义的键名比较函数）。
		array_fill()	用给定的键值填充数组。
		array_fill_keys()	用指定键名的给定键值填充数组。
		array_filter()	用回调函数过滤数组中的元素。
		array_flip()	交换数组中的键和值。
		array_intersect()	比较数组，返回交集（只比较键值）。
		array_intersect_assoc()	比较数组，返回交集（比较键名和键值）。
		array_intersect_key()	比较数组，返回交集（只比较键名）。
		array_intersect_uassoc()	比较数组，返回交集（比较键名和键值，使用用户自定义的键名比较函数）。
		array_intersect_ukey()	比较数组，返回交集（只比较键名，使用用户自定义的键名比较函数）。
		array_key_exists()	检查指定的键名是否存在于数组中。
		array_keys()	返回数组中所有的键名。
		array_map()	把数组中的每个值发送到用户自定义函数，返回新的值。
		array_merge()	把一个或多个数组合并为一个数组。
		array_merge_recursive()	递归地合并一个或多个数组。
		array_multisort()	对多个数组或多维数组进行排序。
		array_pad()	用值将数组填补到指定长度。
		array_pop()	删除数组的最后一个元素（出栈）。
		array_product()	计算数组中所有值的乘积。
		array_push()	将一个或多个元素插入数组的末尾（入栈）。
		array_rand()	返回数组中一个或多个随机的键。
		array_reduce()	通过使用用户自定义函数，以字符串返回数组。
		array_replace()	使用后面数组的值替换第一个数组的值。
		array_replace_recursive()	递归地使用后面数组的值替换第一个数组的值。
		array_reverse()	以相反的顺序返回数组。
		array_search()	搜索数组中给定的值并返回键名。
		array_shift()	删除数组中首个元素，并返回被删除元素的值。
		array_slice()	返回数组中被选定的部分。
		array_splice()	删除并替换数组中指定的元素。
		array_sum()	返回数组中值的和。
		array_udiff()	比较数组，返回差集（只比较值，使用一个用户自定义的键名比较函数）。
		array_udiff_assoc()	比较数组，返回差集（比较键和值，使用内建函数比较键名，使用用户自定义函数比较键值）。
		array_udiff_uassoc()	比较数组，返回差集（比较键和值，使用两个用户自定义的键名比较函数）。
		array_uintersect()	比较数组，返回交集（只比较值，使用一个用户自定义的键名比较函数）。
		array_uintersect_assoc()	比较数组，返回交集（比较键和值，使用内建函数比较键名，使用用户自定义函数比较键值）。
		array_uintersect_uassoc()	比较数组，返回交集（比较键和值，使用两个用户自定义的键名比较函数）。
		array_unique()	删除数组中的重复值。
		array_unshift()	在数组开头插入一个或多个元素。
		array_values()	返回数组中所有的值。
		array_walk()	对数组中的每个成员应用用户函数。
		array_walk_recursive()	对数组中的每个成员递归地应用用户函数。
		arsort()	对关联数组按照键值进行降序排序。
		asort()	对关联数组按照键值进行升序排序。
		compact()	创建包含变量名和它们的值的数组。
		count()	返回数组中元素的数目。
		current()	返回数组中的当前元素。
		each()	返回数组中当前的键／值对。
		end()	将数组的内部指针指向最后一个元素。
		extract()	从数组中将变量导入到当前的符号表。
		in_array()	检查数组中是否存在指定的值。
		key()	从关联数组中取得键名。
		krsort()	对数组按照键名逆向排序。
		ksort()	对数组按照键名排序。
		list()	把数组中的值赋给一些变量。
		natcasesort()	用“自然排序”算法对数组进行不区分大小写字母的排序。
		natsort()	用“自然排序”算法对数组排序。
		next()	将数组中的内部指针向前移动一位。
		pos()	current() 的别名。
		prev()	将数组的内部指针倒回一位。
		range()	创建包含指定范围单元的数组。
		reset()	将数组的内部指针指向第一个元素。
		rsort()	对数组逆向排序。
		shuffle()	将数组打乱。
		sizeof()	count() 的别名。
		sort()	对数组排序。
		uasort()	使用用户自定义的比较函数对数组中的键值进行排序。
		uksort()	使用用户自定义的比较函数对数组中的键名进行排序。
		usort()	使用用户自定义的比较函数对数组进行排序。
		
		
		
	//--- String 函数
		PHP 字符串函数是 PHP 核心的组成部分。无需安装即可使用这些函数。

		addcslashes()	返回在指定的字符前添加反斜杠的字符串。
		addslashes()	返回在预定义的字符前添加反斜杠的字符串。
		bin2hex()	把 ASCII 字符的字符串转换为十六进制值。
		chop()	删除字符串右侧的空白字符或其他字符。
		chr()	从指定的 ASCII 值返回字符。
		chunk_split()	把字符串分割为一系列更小的部分。
		convert_cyr_string()	把字符串由一种 Cyrillic 字符集转换为另一种。
		convert_uudecode()	解码 uuencode 编码字符串。
		convert_uuencode()	使用 uuencode 算法对字符串进行编码。
		count_chars()	返回有关字符串中所用字符的信息。
		crc32()	计算字符串的 32 位 CRC。
		crypt()	单向的字符串加密法（hashing）。
		echo()	输出一个或多个字符串。
		explode()	把字符串打散为数组。
		fprintf()	把格式化的字符串写入到指定的输出流。
		get_html_translation_table()	返回由 htmlspecialchars() 和 htmlentities() 使用的翻译表。
		hebrev()	把希伯来文本转换为可见文本。
		hebrevc()	把希伯来文本转换为可见文本，并把新行（\n）转换为 <br>。
		hex2bin()	把十六进制值的字符串转换为 ASCII 字符。
		html_entity_decode()	把 HTML 实体转换为字符。
		htmlentities()	把字符转换为 HTML 实体。
		htmlspecialchars_decode()	把一些预定义的 HTML 实体转换为字符。
		htmlspecialchars()	把一些预定义的字符转换为 HTML 实体。
		implode()	返回由数组元素组合成的字符串。
		join()	implode() 的别名。
		lcfirst()	把字符串的首字符转换为小写。
		levenshtein()	返回两个字符串之间的 Levenshtein 距离。
		localeconv()	返回本地数字及货币格式信息。
		ltrim()	移除字符串左侧的空白字符或其他字符。
		md5()	计算字符串的 MD5 散列。
		md5_file()	计算文件的 MD5 散列。
		metaphone()	计算字符串的 metaphone 键。
		money_format()	返回格式化为货币字符串的字符串。
		nl_langinfo()	返回特定的本地信息。
		nl2br()	在字符串中的每个新行之前插入 HTML 换行符。
		number_format()	以千位分组来格式化数字。
		ord()	返回字符串中第一个字符的 ASCII 值。
		parse_str()	把查询字符串解析到变量中。
		print()	输出一个或多个字符串。
		printf()	输出格式化的字符串。
		quoted_printable_decode()	把 quoted-printable 字符串转换为 8 位字符串。
		quoted_printable_encode()	把 8 位字符串转换为 quoted-printable 字符串。
		quotemeta()	引用元字符。
		rtrim()	移除字符串右侧的空白字符或其他字符。
		setlocale()	设置地区信息（地域信息）。
		sha1()	计算字符串的 SHA-1 散列。
		sha1_file()	计算文件的 SHA-1 散列。
		similar_text()	计算两个字符串的相似度。
		soundex()	计算字符串的 soundex 键。
		sprintf()	把格式化的字符串写入变量中。
		sscanf()	根据指定的格式解析来自字符串的输入。
		str_getcsv()	把 CSV 字符串解析到数组中。
		str_ireplace()	替换字符串中的一些字符（对大小写不敏感）。
		str_pad()	把字符串填充为新的长度。
		str_repeat()	把字符串重复指定的次数。
		str_replace()	替换字符串中的一些字符（对大小写敏感）。
		str_rot13()	对字符串执行 ROT13 编码。
		str_shuffle()	随机地打乱字符串中的所有字符。
		str_split()	把字符串分割到数组中。
		str_word_count()	计算字符串中的单词数。
		strcasecmp()	比较两个字符串（对大小写不敏感）。
		strchr()	查找字符串在另一字符串中的第一次出现。（strstr() 的别名。）
		strcmp()	比较两个字符串（对大小写敏感）。
		strcoll()	比较两个字符串（根据本地设置）。
		strcspn()	返回在找到某些指定字符的任何部分之前，在字符串中查找的字符数。
		strip_tags()	剥去字符串中的 HTML 和 PHP 标签。
		stripcslashes()	删除由 addcslashes() 函数添加的反斜杠。
		stripslashes()	删除由 addslashes() 函数添加的反斜杠。
		stripos()	返回字符串在另一字符串中第一次出现的位置（对大小写不敏感）。
		stristr()	查找字符串在另一字符串中第一次出现的位置（大小写不敏感）。
		strlen()	返回字符串的长度。
		strnatcasecmp()	使用一种"自然排序"算法来比较两个字符串（对大小写不敏感）。
		strnatcmp()	使用一种"自然排序"算法来比较两个字符串（对大小写敏感）。
		strncasecmp()	前 n 个字符的字符串比较（对大小写不敏感）。
		strncmp()	前 n 个字符的字符串比较（对大小写敏感）。
		strpbrk()	在字符串中查找一组字符的任何一个字符。
		strpos()	返回字符串在另一字符串中第一次出现的位置（对大小写敏感）。
		strrchr()	查找字符串在另一个字符串中最后一次出现。
		strrev()	反转字符串。
		strripos()	查找字符串在另一字符串中最后一次出现的位置（对大小写不敏感）。
		strrpos()	查找字符串在另一字符串中最后一次出现的位置（对大小写敏感）。
		strspn()	返回在字符串中包含的特定字符的数目。
		strstr()	查找字符串在另一字符串中的第一次出现（对大小写敏感）。
		strtok()	把字符串分割为更小的字符串。
		strtolower()	把字符串转换为小写字母。
		strtoupper()	把字符串转换为大写字母。
		strtr()	转换字符串中特定的字符。
		substr()	返回字符串的一部分。
		substr_compare()	从指定的开始位置（二进制安全和选择性区分大小写）比较两个字符串。
		substr_count()	计算子串在字符串中出现的次数。
		substr_replace()	把字符串的一部分替换为另一个字符串。
		trim()	移除字符串两侧的空白字符和其他字符。
		ucfirst()	把字符串中的首字符转换为大写。
		ucwords()	把字符串中每个单词的首字符转换为大写。
		vfprintf()	把格式化的字符串写到指定的输出流。
		vprintf()	输出格式化的字符串。
		vsprintf()	把格式化字符串写入变量中。
		wordwrap()	打断字符串为指定数量的字串
		
		
		
	//--- Math 函数
		PHP：指示支持该函数的最早的 PHP 版本。

		abs()	绝对值。	3
		acos()	反余弦。	3
		acosh()	反双曲余弦。	4
		asin()	反正弦。	3
		asinh()	反双曲正弦。	4
		atan()	反正切。	3
		atan2()	两个参数的反正切。	3
		atanh()	反双曲正切。	4
		base_convert()	在任意进制之间转换数字。	3
		bindec()	把二进制转换为十进制。	3
		ceil()	向上舍入为最接近的整数。	3
		cos()	余弦。	3
		cosh()	双曲余弦。	4
		decbin()	把十进制转换为二进制。	3
		dechex()	把十进制转换为十六进制。	3
		decoct()	把十进制转换为八进制。	3
		deg2rad()	将角度转换为弧度。	3
		exp()	返回 Ex 的值。	3
		expm1()	返回 Ex - 1 的值。	4
		floor()	向下舍入为最接近的整数。	3
		fmod()	返回除法的浮点数余数。	4
		getrandmax()	显示随机数最大的可能值。	3
		hexdec()	把十六进制转换为十进制。	3
		hypot()	计算直角三角形的斜边长度。	4
		is_finite()	判断是否为有限值。	4
		is_infinite()	判断是否为无限值。	4
		is_nan()	判断是否为合法数值。	4
		lcg_value()	返回范围为 (0, 1) 的一个伪随机数。	4
		log()	自然对数。	3
		log10()	以 10 为底的对数。	3
		log1p()	返回 log(1 + number)。	4
		max()	返回最大值。	3
		min()	返回最小值。	3
		mt_getrandmax()	显示随机数的最大可能值。	3
		mt_rand()	使用 Mersenne Twister 算法返回随机整数。	3
		mt_srand()	播种 Mersenne Twister 随机数生成器。	3
		octdec()	把八进制转换为十进制。	3
		pi()	返回圆周率的值。	3
		pow()	返回 x 的 y 次方。	3
		rad2deg()	把弧度数转换为角度数。	3
		rand()	返回随机整数。	3
		round()	对浮点数进行四舍五入。	3
		sin()	正弦。	3
		sinh()	双曲正弦。	4
		sqrt()	平方根。	3
		srand()	播下随机数发生器种子。	3
		tan()	正切。	3
		tanh()	双曲正切。	4



	//--- Date/Time 函数
		checkdate()	验证格利高里日期。
		date_add()	添加日、月、年、时、分和秒到日期。
		date_create_from_format()	返回根据指定格式进行格式化的新的 DateTime 对象。
		date_create()	返回新的 DateTime 对象。
		date_date_set()	设置新日期。
		date_default_timezone_get()	返回由所有的 Date/Time 函数使用的默认时区。
		date_default_timezone_set()	设置由所有的 Date/Time 函数使用的默认时区。
		date_diff()	返回两个日期间的差值。
		date_format()	返回根据指定格式进行格式化的日期。
		date_get_last_errors()	返回日期字符串中的警告/错误。
		date_interval_create_from_date_string()	从字符串的相关部分建立 DateInterval。
		date_interval_format()	格式化时间间隔。
		date_isodate_set()	设置 ISO 日期。
		date_modify()	修改时间戳。
		date_offset_get()	返回时区偏移。
		date_parse_from_format()	根据指定的格式返回带有关于指定日期的详细信息的关联数组。
		date_parse()	返回带有关于指定日期的详细信息的关联数组。
		date_sub()	从指定日期减去日、月、年、时、分和秒。
		date_sun_info()	返回包含有关指定日期与地点的日出/日落和黄昏开始/黄昏结束的信息的数组。
		date_sunrise()	返回指定日期与位置的日出时间。
		date_sunset()	返回指定日期与位置的日落时间。
		date_time_set()	设置时间。
		date_timestamp_get()	返回 Unix 时间戳。
		date_timestamp_set()	设置基于 Unix 时间戳的日期和时间。
		date_timezone_get()	返回给定 DateTime 对象的时区。
		date_timezone_set()	设置 DateTime 对象的时区。
		date()	格式化本地日期和时间。
		getdate()	返回某个时间戳或者当前本地的日期/时间的日期/时间信息。
		gettimeofday()	返回当前时间。
		gmdate()	格式化 GMT/UTC 日期和时间。
		gmmktime()	返回 GMT 日期的 UNIX 时间戳。
		gmstrftime()	根据区域设置对 GMT/UTC 日期和时间进行格式化。
		idate()	将本地时间/日期格式化为整数。
		localtime()	返回本地时间。
		microtime()	返回当前时间的微秒数。
		mktime()	返回日期的 Unix 时间戳。
		strftime()	根据区域设置对本地时间/日期进行格式化。
		strptime()	解析由 strftime() 生成的时间/日期。
		strtotime()	将任何英文文本的日期或时间描述解析为 Unix 时间戳。
		time()	返回当前时间的 Unix 时间戳。
		timezone_abbreviations_list()	返回包含夏令时、偏移量和时区名称的关联数组。
		timezone_identifiers_list()	返回带有所有时区标识符的索引数组。
		timezone_location_get()	返回指定时区的位置信息。
		timezone_name_from_abbr()	根据时区缩略语返回时区名称。
		timezone_name_get()	返回时区的名称。
		timezone_offset_get()	返回相对于 GMT 的时区偏移。
		timezone_open()	创建新的 DateTimeZone 对象。
		timezone_transitions_get()	返回时区的所有转换。
		timezone_version_get()	返回时区数据库的版本。
		PHP 5 预定义的 Date/Time 常量
		常量	描述
		DATE_ATOM	Atom （例如：2005-08-15T16:13:03+0000）
		DATE_COOKIE	HTTP Cookies （例如：Sun, 14 Aug 2005 16:13:03 UTC）
		DATE_ISO8601	ISO-8601 （例如：2005-08-14T16:13:03+0000）
		DATE_RFC822	RFC 822 （例如：Sun, 14 Aug 2005 16:13:03 UTC）
		DATE_RFC850	RFC 850 （例如：Sunday, 14-Aug-05 16:13:03 UTC）
		DATE_RFC1036	RFC 1036 （例如：Sunday, 14-Aug-05 16:13:03 UTC）
		DATE_RFC1123	RFC 1123 （例如：Sun, 14 Aug 2005 16:13:03 UTC）
		DATE_RFC2822	RFC 2822 （Sun, 14 Aug 2005 16:13:03 +0000）
		DATE_RSS	RSS （Sun, 14 Aug 2005 16:13:03 UTC）
		DATE_W3C	World Wide Web Consortium （例如： 2005-08-14T16:13:03+0000）
		
		
		
	//--- MySQL 函数
		PHP：指示支持该函数的最早的 PHP 版本。

		mysql_affected_rows()	取得前一次 MySQL 操作所影响的记录行数。	3
		mysql_change_user()	不赞成。改变活动连接中登录的用户	3
		mysql_client_encoding()	返回当前连接的字符集的名称	4
		mysql_close()	关闭非持久的 MySQL 连接。	3
		mysql_connect()	打开非持久的 MySQL 连接。	3
		mysql_create_db()	不赞成。新建 MySQL 数据库。使用 mysql_query() 代替。	3
		mysql_data_seek()	移动记录指针。	3
		mysql_db_name()	从对 mysql_list_dbs() 的调用返回数据库名称。	3
		mysql_errno()	返回上一个 MySQL 操作中的错误信息的数字编码。	3
		mysql_error()	返回上一个 MySQL 操作产生的文本错误信息。	3
		mysql_fetch_array()	从结果集中取得一行作为关联数组，或数字数组，或二者兼有。	3
		mysql_fetch_assoc()	从结果集中取得一行作为关联数组。	4
		mysql_fetch_field()	从结果集中取得列信息并作为对象返回。	3
		mysql_fetch_lengths()	取得结果集中每个字段的内容的长度。	3
		mysql_fetch_object()	从结果集中取得一行作为对象。	3
		mysql_fetch_row()	从结果集中取得一行作为数字数组。	3
		mysql_field_flags()	从结果中取得和指定字段关联的标志。	3
		mysql_field_len()	返回指定字段的长度。	3
		mysql_field_name()	取得结果中指定字段的字段名。	3
		mysql_field_seek()	将结果集中的指针设定为指定的字段偏移量。	3
		mysql_field_table()	取得指定字段所在的表名。	3
		mysql_field_type()	取得结果集中指定字段的类型。	3
		mysql_free_result()	释放结果内存。	3
		mysql_get_client_info()	取得 MySQL 客户端信息。	4
		mysql_get_host_info()	取得 MySQL 主机信息。	4
		mysql_get_proto_info()	取得 MySQL 协议信息。	4
		mysql_get_server_info()	取得 MySQL 服务器信息。	4
		mysql_info()	取得最近一条查询的信息。	4
		mysql_insert_id()	取得上一步 INSERT 操作产生的 ID。	3
		mysql_list_dbs()	列出 MySQL 服务器中所有的数据库。	3
		mysql_list_processes()	列出 MySQL 进程。	4
		mysql_num_fields()	取得结果集中字段的数目。	3
		mysql_num_rows()	取得结果集中行的数目。	3
		mysql_pconnect()	打开一个到 MySQL 服务器的持久连接。	3
		mysql_ping()	Ping 一个服务器连接，如果没有连接则重新连接。	4
		mysql_query()	发送一条 MySQL 查询。	3
		mysql_real_escape_string()	转义 SQL 语句中使用的字符串中的特殊字符。	4
		mysql_result()	取得结果数据。	3
		mysql_select_db()	选择 MySQL 数据库。	3
		mysql_stat()	取得当前系统状态。	4
		mysql_tablename()	不赞成。取得表名。使用 mysql_query() 代替。	3
		mysql_thread_id()	返回当前线程的 ID。	4
		mysql_unbuffered_query()	向 MySQL 发送一条 SQL 查询（不获取 / 缓存结果）。	4