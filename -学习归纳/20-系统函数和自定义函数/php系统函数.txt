//===== intval 			― 获取变量的整数值
//===== doubleval 		― floatval 的别名
//===== floatval 		― 获取变量的浮点值
//===== strval 			― 获取变量的字符串值
//===== boolval 		― 获取变量的布尔值(提示无此函数)
//===== gettype 		― 获取变量的类型
//===== settype 		― 设置变量的类型
//===== isset 			― 检测变量是否设置
//===== unset 			― 释放给定的变量
//===== empty 			― 检查一个变量是否为空

	gettype 		― 获取变量的类型
	settype 		― 设置变量的类型
	print_r 		― 打印关于变量的易于理解的信息。
	var_dump 		― 打印变量的相关信息
	is_array 		― 检测变量是否是数组
	is_bool 		― 检测变量是否是布尔型
	is_double 		― is_float 的别名
	is_float 		― 检测变量是否是浮点型
	is_real 		― is_float 的别名
	is_int 			― 检测变量是否是整数
	is_integer 		― is_int 的别名
	is_long 		― is_int 的别名
	is_null 		― 检测变量是否为 NULL
	is_numeric 		― 检测变量是否为数字或数字字符串
	is_object 		― 检测变量是否是一个对象
	is_resource 		― 检测变量是否为资源类型
	is_string 		― 检测变量是否是字符串
	serialize		― 产生一个可存储的值的表示
	unserialize 		― 从已存储的表示中创建 PHP 的值
	pathinfo() 		― 获取文件路径的信息





	get_defined_vars 	― 返回由所有已定义变量所组成的数组
	get_resource_type 	― 返回资源（resource）类型
	import_request_variables ― 将 GET／POST／Cookie 变量导入到全局作用域中
	is_callable 		― 检测参数是否为合法的可调用结构
	is_scalar 		― 检测变量是否是一个标量
	var_export 		― 输出或返回一个变量的字符串表示
	debug_zval_dump 	― Dumps a string representation of an internal zend value to output
	
	



//===== empty 			― 检查一个变量是否为空

	变量为空是返回 1 (true) 否则返回 false 或不显示
	$a='';
	echo empty($a);






	
	
//===== pathinfo() 获取文件路径的信息

$name=__FILE__;
echo pathinfo($name,PATHINFO_DIRNAME).' 获取文件路径<BR>';
echo pathinfo($name,PATHINFO_BASENAME).' 获取文件名(带后缀)<BR>';
echo pathinfo($name,PATHINFO_EXTENSION).' 获取文件后缀<BR>';
echo pathinfo($name,PATHINFO_FILENAME).' 获取文件名(不带后缀)<BR>';


//===== intval 			― 获取变量的整数值
//===== doubleval 		― floatval 的别名
//===== floatval 		― 获取变量的浮点值
//===== strval 			― 获取变量的字符串值
//===== boolval 		― 获取变量的布尔值(提示无此函数)

	$a = "123.123abc";

	echo $a.'<br>';
	echo intval($a).'<br>';
	echo doubleval($a).'<br>';
	echo floatval($a).'<br>';
	echo strval($a).'<br>';
	
		结果：
			123.123abc
			123
			123.123
			123.123
			123.123abc
	
	
	
	
	


//===== gettype 		― 获取变量的类型
//===== settype 		― 设置变量的类型

	$a=123;
	echo gettype($a);	//获取变量类型
	settype($a,'string');	//设置变量类型
	echo gettype($a);










//===== isset 			― 检测变量是否设置
//===== unset 			― 释放给定的变量

	$a=5;
	unset($a);		销毁一个变量
	echo isset($a); 	判断变量是否存在 