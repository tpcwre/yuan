
//===== 特殊匹配

	//-- 配置腾讯视频  http://v....& 或 https://v....& 或 http://v...." 或 https://v...."

	$p = '/http:\/\/v(.|\/|\s){40,70}\&|https:\/\/v(.|\/|\s){40,70}\&|http:\/\/v(.|\/|\s){40,70}\"|https:\/\/v(.|\/|\s){40,70}\"/U';
        preg_match_all($p,$output,$arr);
        return $arr[0][0];





//===== 正则表达式的组成
            组成：
                1、定界符
                2、原子
                3、元字符
                4、模式修正符
				
				
				
//===== 正则表达式各属性
			
			
	$A='/^[a-z]abc{2,}\W+$/';		// 正则表达式：
	
	/..../  			// 	定界符
		
	
						//	通用字符作为原子
					
	\d 任意一个数字  0-9
	\D 所有的非数字

	\w 任意一个字符 a-z A-Z 0-9 _
	\W 非任意一个字符

	\s 空白   \r \n \t
	\S 非空白	
	
	\#	\* ..... 		//特殊字符需要用斜杠转义

	 3、元字符 ， 修饰原子功能和限定原子的功能（放在定界符中）
	
	[]					// 	原子列表，最小的匹配单位
							[0-9] [a-z] [A-Z] [\w] [\d] ...
							注意：原子表里面的东西只匹配一次  
	^   如果在原子表的第一个位置使用代表排除

	*   代表前面的原子可以出现0次、1次或多次，必须放在原子或者原子表的后面
	+   表示前面的原子可以出现1次或多次
	?   表示前面的原子可以出现0次或1次

	{n}  代表前面的原子只能出现n次
	{n,}  代表前面的原子最少出现n次，最多出现次数不限制
	{n,m}  代表前面的原子最少出现n次，最多出现m次数

	| 代表或的关系 两边的原子只要有一个出现就可以 它的优先级是最低的

	^    放在正则表达式的前面表示以xxx开头 必须写在正则表达式的最前面。
	$    放在正则表达式的最后面，表示必须以xx结尾，必须要写在正则表达式 后面
	.    代表任意一个字符(原子)

	()   作用：
		1、提高优先级
		2、将小原子变成大原子
		3、括号里面的东西  我们给它叫做 子模式。整个正则表达式为一个大的模式。里面的小括号包括的东西就是大模式中的子模式。


	
	
//===== 回车，换行，的区别，以及它们在不同系统里的区别 

			\r 回车回车，告诉打字机把打印头定位在左边界。

			\n 换行换行，告诉打字机把纸张向下移动一行。
			
			\t 制表符
			windows里面每行结尾是\r\n
			Linux系统里面 \n
			MAC系统里面  \r
			







//===== m：将匹配的字符串中的每个断行都当作新的一行
	

	
//=====  s：修正正则表达式中的. ，让其能够匹配换行回车
	
	
	
//===== x: 修正正则中可以忽略空白
	
	
	
//===== U: 修正正则中的贪婪 ，用(.*?)来替换该功能