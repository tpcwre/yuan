




//===== call_user_func_array 	― 调用回调函数，并把一个数组参数作为回调函数的参数
	call_user_func		― 把第一个参数作为回调函数调用
	create_function 	― Create an anonymous (lambda-style) function
	forward_static_call_array ― Call a static method and pass the arguments as array
	forward_static_call 	― Call a static method
	func_get_arg 		― 返回参数列表的某一项
	func_get_args 		― 返回一个包含函数参数列表的数组
	func_num_args 		― Returns the number of arguments passed to the function
	function_exists 	― 如果给定的函数已经被定义就返回 TRUE
	get_defined_functions 	― Returns an array of all defined functions
	register_shutdown_function ― Register a function for execution on shutdown
	register_tick_function 	― Register a function for execution on each tick
	unregister_tick_function ― De-register a function for execution on each tick








//===== call_user_func_array 	― 调用回调函数，并把一个数组参数作为回调函数的参数
//===== 计算未定个数的参数总和

	function add(){
		$res=0;
		$data=func_get_args();	//获取所有的参数
		foreach($data as $v){
			$res += $v;			//将所有参数值累加
		}
		return $res;				//将累加的和返回
	}

	$data = array(10,20,30,40,50,60,70);
	echo call_user_func_array('add',$data); //计算未知个数的参数和