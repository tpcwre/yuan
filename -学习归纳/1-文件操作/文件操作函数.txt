
								
php manual--文件系统相关扩展---filesystem---filesystem函数		//===== 文件操作手册位置



//==== scandir() 扫描一个目录


touch(); 					//创建文件或修改时间

file(); 					//把整个文件读取到一个数组中。

parse_ini_file();				//配置文件读数组中

file_get_contents('文件名');			//将整个文件读取到一个字符串中

file_put_contents('文件名','要写的内容')；	//将文件清空后再将字串写进文件




fopen('文件','模式');				// 打开文件

        模式：
            r:只读方式打开，文件指针指向文件头，如果文件不存在将报错
            r+：读写的方式打开，文件指针指向文件头部，文件不存在将报错

            w:写入方式打开，文件指向文件的头部并且将文件大小截取为0，如果文件不存在就创建一个。
            w+:读写的方式打开，将文件指针指向文件头并将文件大小截取为0.如果不存在就创建。

            a:写入的方式打开，文件指针指向末尾（以追加的方式写入新内容），如果文件不存在就创建。
            a+：读写方式打开，文件指针指向文件末尾，如果文件不存在就创建。

fgets(资源); 				//一次读取一行，指针下移

fgetc(资源); 				//一次读取一个字符，指针下移

fread(资源,字符数);			//根据你指定的字符数进行读取

feof(资源); 				//文件出错或到文件末尾的时候返回真。

fwrite(资源,写入的内容);	  	//把内容写入到文件指针处
        
rewind(资源);  				//将文件指针重置到头部

fclose(资源);				//关闭文件资源


flock(资源,选项);  			//文件锁

        		选项：
            		读锁 LOCK_SH ，读取文件的时候其他人不要往里面写内容。
            		写锁 LOCK_EX ，写内容的时候，其他人不让写也不让读取。
            		释放锁： LOCK_UN

file_exists();				//文件、目录是否存在

fstat();				//通过已打开的文件指针取得文件相关信息

filetype();				//返回文件类型

filesize();				//获得文件大小，返回字节数

readfile();				//将文件读取出来

is_dir(); 				//判断是否是目录

is_file();				//判断是否是文件

is_executable();			//判断文件是否可以执行。

is_readable();				//判断文件是否可读。

is_writable();				//判断文件是否可写

fileatime(); 				//获取文件的访问时间  access (windows下不准)

filectime(); 				//获取文件的创建时间 create (windows下不准)

filemtime(); 				//修改时间,返回时间戳  modify (windows下不准)

unlink('./aaa/1.txt');			//删除文件

mkdir();				//创建目录

pathinfo('路径','PATHINFO_BASENAME');	//获取路径中的文件名带后缀
basename('路径'); 

pathinfo('路径','PATHINFO_DIRNAME');	//获取路径中的目录部分
dirname('路径');

pathinfo('路径','PATHINFO_EXTENSION');	//获取带后缀的文件名

pathinfo('路径','PATHINFO_FILENAME');	//获取不带后缀的文件名


$op =  opendir('路径');			//获取一个目录资源

readdir($op); 				//读取目录资源

closedir($op);				//关闭一个目录资源


mkdir('路径',模式);			//创建一个文件夹(目录)
mkdir('./test',0755,true);
           		7：可读(4)，可写(2)，可执行(1)
			5：可读(4)，可执行(1)


rmdir(目录名);  			//删除目录  

copy(源文件名,新文件名);		// 拷贝文件并且重新命名

rename(源文件名,新文件名);		// 剪切文件并且重新命名



