
手册位置：W3school => (上)Browser Scripting => (左)JavaScript => JavaScript 对象 =》日期 =》（右）完整的 Date 对象参考手册
=》JavaScript Date 对象参考手册





//===== Date.UTC() 指定某年月日的时间戳
//===== new Date() 获取时间对象
//===== get...() 获取指定的年，月，日的值<br>
//===== 时间属性
//===== 时间函数










//===== Date.UTC() 指定某年月日的时间戳
//===== new Date() 获取时间对象
//===== get...() 获取指定的年，月，日的值<br>

	<script>
		var d = Date.UTC(2013,6,1,12-8,24,6,999);	//设置整体年月日时分秒，毫秒的时间戳
		document.write(d+'<br>');
		var date = new Date();		//获取当前时间对象
		var date = new Date(d);		//获取指定时间戳的时间对象
		date.setFullYear(2018);		//单独设置年的时间戳
		var y = date.getFullYear();	//获取年的时间值
		var m = date.getMonth();
		var d = date.getDate();
		var h = date.getHours();
		var i = date.getMinutes();
		var s = date.getSeconds();
		m = m<10?'0'+m:m;		//设置保证时间的双位格式
		d = d<10?'0'+d:d;
		h = h<10?'0'+h:h;
		i = i<10?'0'+i:i;
		s = s<10?'0'+s:s;
		document.write(y+'-'+m+'-'+d+'-'+h+'-'+i+'-'+s);
	</script>








//===== 时间属性


	constructor 	返回对创建此对象的 Date 函数的引用。 1 4 
	prototype 		使您有能力向对象添加属性和方法。 1 4 


	
	

//===== 时间函数




	Date() 			返回当日的日期和时间。 1 3   Date(d) 生成指定时间的对象
	getDate() 		获取月中的天 (1 ~ 31)。 1 3 
	getDay() 		从 Date 对象返回一周中的某一天 (0 ~ 6)。 1 3 
	getMonth() 		从 Date 对象返回月份 (0 ~ 11)。 1 3 
	getFullYear() 		从 Date 对象以四位数字返回年份。 1 4 
	getYear() 		请使用 getFullYear() 方法代替。 1 3 
	getHours() 		返回 Date 对象的小时 (0 ~ 23)。 1 3 
	getMinutes() 		返回 Date 对象的分钟 (0 ~ 59)。 1 3 
	getSeconds() 		返回 Date 对象的秒数 (0 ~ 59)。 1 3 
	getMilliseconds() 	返回 Date 对象的毫秒(0 ~ 999)。 1 4 
	getTime() 		返回 1970 年 1 月 1 日至今的毫秒数。 1 3  (获取时间戳)
	getTimezoneOffset() 	返回本地时间与格林威治标准时间 (GMT) 的分钟差。 1 3  (获取时差)
	getUTCDate() 		根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。 1 4 
	getUTCDay() 		根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。 1 4 
	getUTCMonth() 		根据世界时从 Date 对象返回月份 (0 ~ 11)。 1 4 
	getUTCFullYear() 	根据世界时从 Date 对象返回四位数的年份。 1 4 
	getUTCHours() 		根据世界时返回 Date 对象的小时 (0 ~ 23)。 1 4 
	getUTCMinutes() 	根据世界时返回 Date 对象的分钟 (0 ~ 59)。 1 4 
	getUTCSeconds() 	根据世界时返回 Date 对象的秒钟 (0 ~ 59)。 1 4 
	getUTCMilliseconds() 	根据世界时返回 Date 对象的毫秒(0 ~ 999)。 1 4 
	parse() 		返回1970年1月1日午夜到指定日期（字符串）的毫秒数。 1 3 
	setDate() 		设置 Date 对象中月的某一天 (1 ~ 31)。 1 3 
	setMonth() 		设置 Date 对象中月份 (0 ~ 11)。 1 3 
	setFullYear() 	设置 Date 对象中的年份（四位数字）。 1 4 
	setYear() 		请使用 setFullYear() 方法代替。 1 3 
	setHours() 		设置 Date 对象中的小时 (0 ~ 23)。 1 3 
	setMinutes() 	设置 Date 对象中的分钟 (0 ~ 59)。 1 3 
	setSeconds() 	设置 Date 对象中的秒钟 (0 ~ 59)。 1 3 
	setMilliseconds() 设置 Date 对象中的毫秒 (0 ~ 999)。 1 4 
	setTime() 		以毫秒设置 Date 对象。 1 3 
	setUTCDate() 	根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。 1 4 
	setUTCMonth() 	根据世界时设置 Date 对象中的月份 (0 ~ 11)。 1 4 
	setUTCFullYear() 根据世界时设置 Date 对象中的年份（四位数字）。 1 4 
	setUTCHours() 	根据世界时设置 Date 对象中的小时 (0 ~ 23)。 1 4 
	setUTCMinutes() 根据世界时设置 Date 对象中的分钟 (0 ~ 59)。 1 4 
	setUTCSeconds() 根据世界时设置 Date 对象中的秒钟 (0 ~ 59)。 1 4 
	setUTCMilliseconds() 根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。 1 4 
	toSource() 		返回该对象的源代码。 1 - 
	toString() 		把 Date 对象转换为字符串。 1 4 
	toTimeString() 	把 Date 对象的时间部分转换为字符串。 1 4 
	toDateString() 	把 Date 对象的日期部分转换为字符串。 1 4 
	toGMTString() 	请使用 toUTCString() 方法代替。 1 3 
	toUTCString() 	根据世界时，把 Date 对象转换为字符串。 1 4 
	toLocaleString() 根据本地时间格式，把 Date 对象转换为字符串。 1 3 
	toLocaleTimeString() 根据本地时间格式，把 Date 对象的时间部分转换为字符串。 1 3 
	toLocaleDateString() 根据本地时间格式，把 Date 对象的日期部分转换为字符串。 1 3 
	UTC() 			根据世界时返回 1997 年 1 月 1 日 到指定日期的毫秒数。 1 3 
	valueOf() 		返回 Date 对象的原始值。 1 4 











//===== js 获取时间戳的方法




第一种方法：
var timestamp = Date.parse(new Date());

结果：1280977330000
第二种方法：
var timestamp = (new Date()).valueOf();

结果：1280977330748

第三种方法：
var timestamp=new Date().getTime()；

结果：1280977330748

第一种：获取的时间戳是把毫秒改成000显示，

第二种和第三种是获取了当前毫秒的时间戳。
