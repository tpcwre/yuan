
//=====逻辑运算符 ! , && , || , and , or

//=====比较运算符 ==, ===,!=,!==,<>,<,>,<=,>= 

//===== ++ -- 递增，递减

//=====复合赋值操作 += , -= , *= , /= , %= , = 

//=====算术运算符 + , - , * , / , %

//=====代码中的转义字符 \n , \r , \t , \\ , \$ , \"

//===== . 字符串连接符

/===== 三元运算

//===== 错误抑制符 @

//=====  用 () 提高运算符优先级 





















/===== 三元运算

		$a=true;
		var_dump($a?'真':'假');
	
		echo "<br>";
		$a=100;
		var_dump($a<50?'结果小于一百':'结果大于一百');
	echo "<hr>";
	







	
	
//===== 错误抑制符 @<
	
		$a1;
		echo @$a1;
	echo "<hr>";
	
	
	





//=====  用 () 提高运算符优先级
	
		$a=10;
		$b=5;
		$c=3;
		$d=$a+$b*$c;
		echo '$a+$b*$c='.$d.'<br>';
		$d=($a+$b)*$c;
		echo '($a+$b)*$c='.$d.'<br>';
















//===== . 字符串连接符 
	
		$a ='a';
		echo $a.'<br>';
		$a .= 'b';
		echo $a.'<br>';
		
		$a=123;
		$b='456';
		echo $a.$b;










//=====逻辑运算符 ! , && , || , and , or , & ,| 

!	非 	!$b	如果$b是false,则返回true,否则相反。

&&	与	$a&&$b	如果$a和$b都是true,则结果为true,否则为false.

|| 	或	$a||$b	如果$a和$b中有一个为true或者都为true,则结果为true,否则为false.

and	与	$a and $b	与 && 相同，但其优先级较低。

or 	或	$a or $b 	与 || 相同，但其优先级较低。




	//-- 逻辑运算 && 
	
		$a=6;
		var_dump($a>4 && $a<6);
		var_dump($a!=4 && $a>3);
		echo "<br>如果第一个表达式返回false,将不再检查第二个表达式";






	//-- 逻辑运算 || </h1>';
	
		$a=6;
		var_dump($a>4 || $a<6);
		var_dump($a<4 || $a>3);
		
		
		echo "<br>如果第一个表达式返回true 将不再检查第二个表达式！";



	//-- 逻辑运算 ! </h1>';
	
		$a=false;
		var_dump(!$a);





	//-- 位运算符 & </h1>';
	
		$a=0011;
		$b=0101;
		var_dump($a & $b);
	echo "<hr>";
	

	
	
	
	//-- 位运算符 | </h1>';
	
		$a=0011;
		$b=0101;
		var_dump($a | $b);
	echo "<hr>";





	//-- 计算是否为润年 </h1>';
	
		echo "<form action='' method='get'>";
			echo "<input name='year' />";
			echo "<input type='submit' value='提交' />";
		echo '</form>';
		$year=@ $_GET['year'];
		
		echo $year%4==0 && $year%100!=0 || $year%400==0 ? $year.'是润年':$year.'不是润年';
	













//=====比较运算符 ==, ===,!=,!==,<>,<,>,<=,>= 

比较运算的结果正确时返回true,否则返回false; 在网页上体现的真为1，假为0或空.

==	等于

===	恒等

!=	不等

!==	不恒等

<>	不等

<	小于

>	大于

<=	小于等于

>=	大于等于




	//-- 比较运算符 > </h1>';
	
		$a =5;
		$b=3;
		echo '5>3?<br>';
		var_dump($a > $b);



	//-- 比较运算符 < </h1>';
	
		$a =5;
		$b=3;
		echo '5<3?<br>';
		var_dump($a < $b);



	//-- 比较运算符 <= </h1>';
	
		$a =5;
		$b=3;
		echo '5<=3?<br>';
		var_dump($a <= $b);



	//-- 比较运算符 >= </h1>';
	
		$a =5;
		$b=3;
		echo '5>=3?<br>';
		var_dump($a >= $b);




	//-- 比较运算符 == </h1>';
	
		$a =5;
		$c='5';
		echo '$a==$c?<br>';
		var_dump($a== $c);




	//-- 比较运算符 === </h1>';
	
		$a =5;
		$c='5';
		$b=5;
		echo '$a===$c?<br>';
		var_dump($a===$c);
		echo "<br>";
		
		echo '$a===$b?<br>';
		var_dump($a===$b);
		
		echo '<br>';
		$a=true;
		$b=1;
		var_dump($a===$b);



	//-- 比较运算符 != </h1>';
	
		$a =5;
		$c='5';
		$b=6;
		echo '$a!=$c?<br>';
		var_dump($a!=$c);
		echo "<br>";
		
		echo '$a!=$b?<br>';
		var_dump($a!==$b);







	//-- 比较运算符 !== </h1>';
	
		$a =5;
		$c='5';
		$b=5;
		echo '$a!==$c?<br>';
		var_dump($a!==$c);
		echo "<br>";
		
		echo '$a!==$b?<br>';
		var_dump($a!==$b);






































//===== ++ -- 递增，递减

++ 等同于 +1  
-- 等同于 -1
如

<?php
	$a=1;
	$b=$a++;	// ++在后是先赋值后运算
	echo $b;	//结果：1

	$aa=1;
	$bb=++$aa;	// ++在前是先运算后赋值
	echo $bb;	//结果：2
?>



		$a=true;
		var_dump($a);
		$a++;
		++$a;
		var_dump($a);
		
		echo '布尔值在运算中不能自加或自减<br>';
	
		$a=2;
		$b=$a++;
		echo $b."<br>++在后，先赋值后运算<br>";
		$b=++$a;
		echo $b."<br>++在前，会先运算，后赋值<br>";
		
		
		
		$a=5;
		$b=$a--;
		echo $b."<br>--在后，先赋值后运算<br>";
		$b=--$a;
		echo $b."<br>--在前，会先运算，后赋值<br>";













//=====复合赋值操作 += , -= , *= , /= , %= , = 

操作符	使用方法	等价于
+=	$a+=$b		$a=$a+$b

-=	$a-=$b		$a=$a-$b	

*=	$a*=$b		$a=$a*$b

/=	$a/=$b		$a=$a/$b

%=	$a%=$b		$a=$a%$b

.= 	$a.=$b		$a=$a.$b

	//--赋值运算会自动转换数据类型
	
		$a=1;
		$b='123abc';
		echo $a+$b;
	
	//-- + 加法 
		$a=3+2;
		echo '3-2='.$a;
	
	//-- - 减法  
		$a =5-3;
		echo '5-3='.$a;


	//-- * 乘法  
		$a =3*5;
		echo '5*3='.$a;


	//-- / 除法  </h1>';
		$a =6/3;
		echo '6/3='.$a;

 	//-- % 取余 
		$a =10%3;
		echo '10%3='.$a."<br>";
		
		echo -10%3 .' -- 当被除数为负数时，取模结果为负数<br>';
		echo 10%-3 .' -- 当被除数为正数时，取模结果为正数<br>';


	//-- 赋值运算符 += 
	
		$a =5;
		echo $a."<br>";
		$a += 1;
		echo $a;





	//-- -= 
	
		$a =5;
		echo $a."<br>";
		$a -= 1;
		echo $a;


	//-- *= 
	
		$a =5;
		echo $a."<br>";
		$a *= 2;
		echo $a;

	//-- = 
	
		$a =10;
		echo $a."<br>";
		$a /= 3;
		echo $a;




	//-- %= </h1>';
	
		$a =10;
		echo $a."<br>";
		$a %= 3;
		echo $a;















//=====算术运算符 + , - , * , / , %

+	加	$a+$b

-	减	$a-$b

*	乘	$a*$b

/	除	$a/$b

%	取余	$a%$b















//=====代码中的转义字符 \n , \r , \t , \\ , \$ , \"

注意：这里的转义字符的效果是产生在源代码中的，不是网页页面上的效果

\n	换行符	代码中的换行不同于 页面中的换行<br>
\r	回车	
\t	制图表	相当于大空格(tab键)
\\	反斜杠	
\$	美元符	
\"	双引号


	echo "换行： \n  回车：\r 制表符：\t	\\反斜线<br>";
	echo "韩超\r\n真帅<br>";
	echo '这是一张图片<img src=\'2.jpg\' /><br>';
	
	$a="a\'b\'c";
	echo $a;






