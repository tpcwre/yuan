
//===== php-睡眠3秒钟后再执行后面的内容		(特效)
//===== PHP易宝网上支付案例
//===== 从虚拟目录跨盘引用其它盘符目录文件
//===== php引用（地址）传递，使用 &变量名.
//===== 排序法-冒泡，选择，插入，快速排序法：
//===== 冒泡排序法
//===== 冒泡的优化，当数组是有排列时，可以加入以下代码进行优化。
//===== 选择排序法：
//===== 插入排序法：
//===== 快速排序法：
//===== 顺序查找：
//===== 二分查找法（必须掌握）


//===== require()和require_once()的区别和细节
//===== 三元运算法（三目运算法）
//===== PHP数据的八种类型
//===== 浮点数：
//===== 图表开发库 jpgraph
//===== graph解决乱码函数
//===== exit() PHP调试时中止后面的代码 
//===== 判断一个变量是否为空
//===== 关于PHP以及bs和cs的介绍
//===== php引用（地址）传递，使用 &变量名.












//===== 排序法-冒泡，选择，插入，快速排序法：

		排序的介绍：  排序是将一组数据，依指定的顺序进行排列的过程，
		排序的分类：
			1，内部排序：指将需要处理的所有数据都加载到内部存储器中进行排序。
				内排又分：交换式排序法，选择式排序法，和插入式排序法。
			
			2，外部排序法： 当数据量过大，无法全部加载到内存中，需要借助外部存储进行排序；

				外排分：合并排序法和直接合并排序法。
			排序(Sorting) 是数据处理中一种很重要的运算，同时也是很常用的运算，一般数据处理工作
		25%的时间都在进行排序，简单地说，排序就是把一组记录（元素）按照某个域的值的递增（即由小到大）
		或递减（即由大到小）的次序重新排列的过程。
				

			这里我们介绍一些常用的排序方法，排序是一个程序员基本功，所谓排序就是对一组数据，按
		照某个顺序排列的过程。
			
			
			排序分两大类：
		一：内部排序：
			1，交换式排序法：
				A;冒泡排序法：
					

			快速排序法：
			选择排序法：
			插入排序法：

		二：外部排序：
		因数据重大，必须借助外边文件来完成。



//===== 冒泡排序法

		<?php
		function bubble($arr){
			$temp=0;
			for($i=0;$i<count($arr)-1;$i++){
				for($j=0;$j<count($arr)-1-$i;$j++){
					if($arr[$j]<$arr[$j+1]){
						$temp = $arr[$j+1];
						$arr[$j+1]=$arr[$j];
						$arr[$j]=$temp;
					}
				}
				//冒泡的优化，当数组是有排列时，可以加入以下代码进行优化。
				if(!$flag){
					//以经是有序
					break;
				}
				$flag=false;
			}
		}









//===== 冒泡的优化，当数组是有排列时，可以加入以下代码进行优化。

			if(!$flag){
				//以经是有序
				break;
			}
			$flag=false;
			$abc=array(32,4,838,22,-35,89,43,0,345,2,5,7,88);
			//调用冒泡函数进行排序，，&符号重点，没有&将无法实现调用函数来完成对$abc的排序。
			bubble(&$abc);
			foreach($abc as $k=>$v){
				echo $v."<br>";
			}

		 ----从上面的案例我们可以看出，数组的默认传递是值，不是地址；


 
 
 
 
 
 


//===== 选择排序法：

		原理：
			将第一个元素的值设为基值
			将第一个元素的KEY设为基KEY
			遍历当前元素以后的所有元素
			如果基值大于遍历值
			则保存最小值
			则保存最小KEY
			用临时变量将首个元素值保存
			将最小值赋给首元素 
			临时保存的原首元素的值赋给那个最小KEY的元素
		
		function selectSort(&$arr){
			$temp=0;
			for($i=0;$i<count($arr)-1;$i++){
				$minVal=$arr[$i];    //假设$i是最小值，或是设定一个基值。
				$minKey=$i;	    //记录最小数的下标,或记录基值的下标.

				for($j=$i+1;$j<count($arr);$j++){
					if($minVal>$arr[$j]){
						$minVal=$arr[$j];
						$minKey=$j;
					}
				}
				$temp=$arr[$i];
				$arr[$i]=$arr[$minKey];
				$arr[$minKey]=$temp;
			}	
		}







//===== 插入排序法：
		<?php
		function insertSort(&$arr){
			for($i=1;$i<count($arr);$i++){
				$val=$arr[$i];
				$key=$i-1;

				while($key>=0&&$val<$arr[$key]){
					$arr[$key+1] = $arr[$key];
					$key--;
				}
				$arr[$key+1] = $val;
			}
		}
		$abc=array(82,3,25,87,35,72,9,337,45,62);
		insertSort($abc);
		print_r($abc);
		?>
			









//===== 快速排序法：

		<?php
		function quickSort($left,$right,&$array){
			$l=$left;
			$r=$right;
			$pivot = $array[($left+$right)/2];
			$temp=0;
			while($l<$r){
				while($array[$l]<$pivot) $l++;
				while($array[$r]>$pivot) $r--;
				if($l>=$r) break;
				$temp=$array[$l];
				$array[$l]=$array[$r];
				$array[$r]=$temp;
				if($array[$l]==$pivot) --$r;
				if($array[$r]==$pivot) ++$l;
			}
			if($l==$r){
				$l++;
				$r--;
			}
			if($left<$r) quickSort($left,$r,$array);
			if($right>$l) quickSort($l,$right,$array);
		}
			$aaa=array(1,3,88,2,55,42,983,98,873,27);
			quickSort(0,count($aaa)-1,$aaa);
			print_r($aaa);
		?>











//===== 顺序查找：

		对某个数组，按照顺序，一个一个比较，然后找到你要的数据：
	案例：
		要求从一个数组 中查找 一个数，如果查找到则输出该数的下标，如果
	找不到则输出，查无此数！

	<?php
		$arr=array(46,900,0,-1,-1);

	function search(&$arr,$findVal){
		$flag=false;	
		for($i=0;$i<count($arr);$i++){
			if($findVal==$arr[$i]){
				echo "找到了，下标为：$i";
				$flag=true;
				break; //这里如果只想找一个就加break,想找更多就不加break.
			}
		}
		if(!$flag){
			echo "查询不到";
		}
	}
	search(&$arr,0);

	?>

	
	



//===== 二分查找法（必须掌握）

		所谓二分查找，它有一个重要的前提，该项数组本身以经是一个有序数组，如果该数组不是有序的，则必须先排序再查找。

	<?php
		$arr=array(1,2,3,4,5,6,7,8,9);
	function search(&$arr,$v,$l,$r){
		//当$r>$l说明没有数
		if($l>$r){
			echo "查无此数";
			return;
		}
		//找到中间这个数
		$m=round(($r+$l)/2);
		//查找数如果大于中间数，则向后找，
			
		if($v>$arr[$m]){
			search($arr,$v,$m+1,$r);
		}
		//查找数如果小于中间数，则向前找，
		else if($v<$arr[$m]){
			search($arr,$v,$l,$m-1);
		}
		else{
			echo "找到这个数，下标是$m";
		}
	}

	search($arr,83,0,count($arr));

	?>



























//===== php引用（地址）传递，使用 &变量名.

	$a=213;
	function abc(&$b){
		$b=314;
	}
	abc($a);
	echo $a;

	总结：如果abc($b) 最后结果 $a是213;但abc(&$b)中加了&,那么abc()虽然开辟了新的栈但是，却依然延用了$a的老地址，然后在abc($b) 中，又对$b 赋值了314, 所以就等于是把$a 地址的值改变成为了314.所以abc(&$b)后的 echo $a;的结果是 314.


















//===== require()和require_once()的区别和细节

	require()不判断是否重复，随着页面执行，require_once()判断是否重复，然后再执行，如重复的话就不执行。一般放在PHP页面的最前面。PHP在执行前，就会读入require所引入的文件，一旦出现错误，则退出程序。

   这两个区别为，前者遇到即包含文件，后者会判断是否以经包含过了，如果包含过了，则不再包含文件，
一可以节省资源，二可以避免重复定义的错误。例如：

<?php
	require 'c.php';
	//先判断，再引入，如果发现c.php已经引入，则不再引入.
	require_once 'c.php';
	
?>


	3,include（）和include_once() 的区别

	include "文件名或路径";
	include ('文件名或路径');
	$file = "文件名或路径";
	
	区别
	include()不判断是否重复，就执行，include_once()判断是否重复，然后再执行，如重复的话就不执行。

	这两个区别为，前者遇到即包含文件夹，后者会判断是否以经包含过了，如果包含过了，则
	不再包含文件，一可以节省资源，二可以避免重复定义的错误。



	4，include 和require的区别 (同_once)
	相同点：都是可以引入别的页面。
	不同点：include如果出现了错误，会继续执行，require出现错误，则会终止程序。	
		require在页面执行时就会被引入，而include是在执行时才会被引入。


	

	小结：做项目的时候，基本上使用的是：require.once
	注意： require_once等应该放在PHP的最前面。或放在被调用的函数前面。















//===== 三元运算法（三目运算法）

	<?php
		$a = 90;
		$b = 80:
		$c = $a>$b ? (12-10) : "hello word";
		echo $c ;    //结果为 2 
	?>













//===== 关于PHP以及bs和cs的介绍

		1，PHP是persola home page
		2,目前是zend公司负责维护和商业化，
		3，PHP是嵌入到HTML代码
		4,PHP脚本是运行在服务器端的.
		5,soap(简单对象协议)
		6,php开发工具 (ide 集成开发环境)
			记事本
			editplus
			vim
			zendstudio
			easyeclipse


		bs和cs的介绍

		bs 中的b - browser 浏览器的意思  S-服务器
		cs 中的c - client  客户端的意思  s-服务器

		b/s的优势：
			1，开发成本低，
			2，管理维护简单。
			3，产品升级便利。
			4，对用户的培训费用低。
			5，用户使用方便，出现故障的概率小。
		b/s的不足：
			1，安全性不足。
			2，客户端不能随心变化，受浏览器的限制。









//===== PHP数据的八种类型	

	数据类型：
	PHP把持八种原始类型。
		》四种标题类型；
			布尔型：boolean
			整形 ：interger
			浮点型: float （浮点数，也作double）
			字符串：String
		》两种复合类型；
			数组： Array
			对象： object
		》最后是两种特殊类型；
			资源：Resource
			NULL






//===== 浮点数：

	浮点数的字长和平台相关，通常最大值是1.8E308 并具有14位十进制数字的精度（这个限制很重要）
	小数的精度如何起算：从左边开始第一个非0的数开始计算。如：
		$a = 567.1234567    	  显示 567.1234566
		$b = 789.00012345678922	  显示 789.00012345678
		$c = 0.000000000000089077 显示 0.000000000000089077










//===== 图表开发库 jpgraph

1，先下载。下载官网：http://jpgraph.net
2, 解压，
3，把example目录的其它文件剪切到example文件夹内，注意新建文件夹的名字一定是jpgraph



//===== graph解决乱码函数

		$graph->title->setFont(FF_ARIAL,FS_BOLD,14); 这样的标题会出现乱码。
		解决方法：找到graph/ipgraph_ttf.inc.php 并打开，找到如下内容并复制其一：
		// Chinese font
		define("FF_SIMSUN",30);
		define("FF_CHINESE",31);
		define("FF_BIG5",32);
		$graph->title->setFont(FF_SIMSUN,FS_BOLD,14);  //如此即可










//===== php-睡眠3秒钟后再执行后面的内容		(特效)

	<?php sleep(3); ?>





//===== exit() PHP调试时中止后面的代码 

	......
	exit();		//exit 会终止后面代码的运行
	......




//===== 从虚拟目录跨盘引用其它盘符目录文件

	require "C://AppServ/www/mysql.php";	//跨盘符引用页面
	$mysql = new Mysql();








//===== 判断一个变量是否为空

	$a='';
	if($a==null){
		echo '空';
	}
	if($a!=null){
		echo '不空';
	}

	或

	if(empty($a)){
		echo '空';
	}else{
		echo '不空';
	}


































//===== PHP易宝网上支付案例

	//--网上支付目前有两种支付方式：
		1，直接和银行对接
			优点是安全性高
			缺点是工作量大，而且需要资格审核
		2，和中间公司对接
			优点是开发维护方便
			缺点是存在安全隐患


	

	//--目前国内比较好的中间公司

		首信易支付：www.heijing.com.cn	每年需要交纳一定的接口使用费，并且从交易金额中扣除1%的手续费，像当当网，红孩子，京东商城使用了首信易支付。
		
		易宝支付：www.yeepay.com
		接入免费，只从交易金额中扣除1%的手续费，像盛大，E龙网，巴巴运动网使用了易宝支付。






	//--易宝支付协议介绍：
		1，支付请求是HTTPS协议请求，商户以GET或POST方式发送到易宝支付。
		2，易宝支付平台统一使用GBK/GB2312编码方式。
		3，参数名称和参数说明中规定的固定值必须与列表中完全一致）（大小写敏感）；





	//--易宝网上支付系统案例

		//首页 
		<html>
		<head>
			<title>我的支付系统</title>
			<meta http-equiv="content-type" content="text/html; charset=gb2312"/>
		</head>
		<body>
		<form action="b.php" method="post">
		<table>
			<tr>
				<td colspan="4">
				订单号：<input type='text' name='p2_Order'/>
				支付金额:<input type='text' name='p3_Amt'/>
				</td>
			</tr>
			<tr>
				<td colspan='4'>请选择支付银行</td>
			</tr>
			<tr>
				<td><input type='radio' name='pd_FrpId' value='CMBCHINA-NET' />招商银行</td>
				<td><input type='radio' name='pd_FrpId' value='ICBC-NET' />工商银行</td>
				<td><input type='radio' name='pd_FrpId' value='ABC-NET' />农业银行</td>
				<td><input type='radio' name='pd_FrpId' value='CCB-NET' />建设银行</td>
			</tr>
			<tr>
				<td colspan='4'><input type='submit' value='确认支付'/></td>
			</tr>
		</table>
		</form>
		</body>
		</html>


	//--支付处理页面
			
		<html>
		<head>
			<title>我的支付系统</title>
			<meta http-equiv="content-type" content="text/html; charset=gb2312"/>
		</head>
		<?php
			require_once 'test.php';
			//获取用户提交的信息
			$p0_Cmd="Buy";
			$p1_MerId="10012226645";
			$p2_Order=$_POST['p2_Order'];
			$p3_Amt=$_POST['p3_Amt'];
			$p4_Cur="CNY";
			$p5_Pid="";
			$p6_Pcat="";
			$p7_Pdesc="";
			$p8_Url="http://localhost/c.php";
			$p9_SAF='0';
			$pa_MP="";
			$pd_FrpId=$_POST['pd_FrpId'];
			$pr_NeedResponse="1";
			
			$data="";
			$data=$data.$p0_Cmd;
			$data=$data.$p1_MerId;
			$data=$data.$p2_Order;
			$data=$data.$p3_Amt;
			$data=$data.$p4_Cur;
			$data=$data.$p5_Pid;
			$data=$data.$p6_Pcat;
			$data=$data.$p7_Pdesc;
			$data=$data.$p8_Url;
			$data=$data.$p9_SAF;
			$data=$data.$pa_MP;
			$data=$data.$pd_FrpId;
			$data=$data.$pr_NeedResponse;
			$merchantKey= "w79txMr0ql14p709ADuQ7a9Hk3Dc6G2225021w79ws3G9oPSy20U92QimbLy";
			$t = new test();
			$hmac=$t->HmacMd5($data,$merchantKey);
		?>
			你的订单号是<?php echo $p2_Order;?> 支付的金额是<?php echo $p3_Amt ;?>
		<form action="https://www.yeepay.com/app-merchant-proxy/node" method="post">
			<input type='hidden' name="p0_Cmd" value="<?php echo $p0_Cmd ;?>"/>
			<input type='hidden' name="p1_MerId" value="<?php echo $p1_MerId ;?>"/>
			<input type='hidden' name="p2_Order" value="<?php echo $p2_Order ;?>"/>
			<input type='hidden' name="p3_Amt" value="<?php echo $p3_Amt ;?>"/>
			<input type='hidden' name="p4_Cur" value="<?php echo $p4_Cur ;?>"/>
			<input type='hidden' name="p5_Pid" value="<?php echo $p5_Pid ;?>"/>
			<input type='hidden' name="p6_Pcat" value="<?php echo $p6_Pcat ;?>"/>
			<input type='hidden' name="p7_Pdesc" value="<?php echo $p7_Pdesc ;?>"/>
			<input type='hidden' name="p8_Url" value="<?php echo $p8_Url ;?>"/>
			<input type='hidden' name="p9_SAF" value="<?php echo $p9_SAF ;?>"/>
			<input type='hidden' name="pa_MP" value="<?php echo $pa_MP ;?>"/>
			<input type='hidden' name="pd_FrpId" value="<?php echo $pd_FrpId ;?>"/>
			<input type='hidden' name="pr_NeedResponse" value="<?php echo $pr_NeedResponse ;?>"/>
			<input type='hidden' name="hmac" value="<?php echo $hmac ;?>"/>
			<input type="submit" value='确认支付' />
		</form>
		</html>


	//--易宝回调页面
	
		<html>
		<head>
			<title>我的支付系统</title>
			<meta http-equiv="content-type" content="text/html; charset=gb2312"/>
		</head>
		<h1>支付成功！！！</h1>
		</html>


	//--网上支付处理函数
		<?php
		class test{
			function HmacMd5($data,$key){
				$key=iconv("GB2312","UTF-8",$key);
				$data=iconv("GB2312","UTF-8",$data);
				$b=64;
				if(strlen($key)>$b){
					$key=pack("H*",md5($key));
				}
				$key=str_pad($key,$b,chr(0x00));
				$ipad=str_pad('',$b,chr(0x36));
				$opad=str_pad('',$b,chr(0x5c));
				$k_ipad=$key ^ $ipad;
				$k_opad=$key ^ $opad;
				return md5($k_opad . pack("H*",md5($k_ipad . $data)));
			}
		}
		?>

