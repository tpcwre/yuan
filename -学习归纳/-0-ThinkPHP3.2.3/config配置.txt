
注：tp框架配置变量存放位置为：ThinkPHP/Conf/convertion.php 但这里不要改动，请在项目下的配置文件Conf/config.php中另行覆盖！







	'URL_MODEL'=>'1',			//-- URL 四种模式/系统默认为1,
		0：普通模式
		1：pathinfo模式
		2：重写模式
		3：兼容模式
		系统本身是兼容四种模式的，使用哪种模式都会成功，这里设置的目的在于，有系统会自动生成地址，而这个时候所生成的地址就会按照设置的模式来生成了！

	     设置 URL 重写模式详述
		1，先将apache配置文件httpd.conf中的 rewrite.so 前的 号去掉 ，开启重写apache的重写功能 
		2，在项目中的index同级目录中创建 一个 .htaccess 文件 ，添加如下内容
		   <IfModule mod_rewrite.c>
  			Options +FollowSymlinks 	//linux系统中不加此句会出内部异常错误
  			RewriteEngine On
 		 	RewriteCond %{REQUEST_FILENAME} !-d
  			RewriteCond %{REQUEST_FILENAME} !-f
  			RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]
		   </IfModule>
		3, 在thinkphp 的配置文件中设置URL模式为2 （重写模式）


	
	'URL_PATHINFO_DEPR'=>'-',		//-- 修改URL的分隔符 (其它的 URL 模式参看 tp手册-》架构-》URL模式)
				//效果：http://localhost/index.php/home-user-login-var-value


	'TMPL_FILE_DEPR'=>'/',			//-- 控制器与方法在地址上的连接符
				默认为 Index/index    Index模块下的index方法
				修改为 Index_index    意义同上，但是省略了一个文件夹的层级



						//-- 数据库连接配置			

	'DB_TYPE'=>'mysql',   		//设置数据库类型
	'DB_HOST'=>'localhost',		//设置主机
		 'DB_HOST'=>'localhost,l1,l2,l3',		//多服务器地址
	'DB_NAME'=>'thinkphp',		//设置数据库名
	'DB_USER'=>'root',    		//设置用户名
	'DB_PWD'=>'',        		//设置密码
	'DB_PORT'=>'3306',   		//设置端口号
	'DB_PREFIX'=>'tp_',  		//设置表前缀
	'DB_RW_SEPARATE'=>true,		//读写分离
	'DB_MASTER_NUM'=>'2',		//设置主服务的个数

	'DB_DSN'=>'mysql://root:@localhost:3306/thinkphp',	//使用DSN方式配置数据库信息



						//-- PDO数据库连接配置

	'DB_TYPE'=>'pdo',   		//设置数据库类型
	'DB_USER'=>'root',    		//设置用户名
	'DB_PWD'=>'123',		//设置密码
	'DB_PREFIX'=>'tp_',		//设置数据库表前缀
	
	'DB_DSN'=>'mysql://host=localhost;dbname=thinkphp;charset=UTF8',


	'DEFAULT_M_LAYER' =>  'Logic', 		// 更改默认的模型层(Model)名称为Logic
			//配置修改后：
				D('User') 		//实例化UserLogic
				D('User','Model') 	//实例化UserModel
				D('User','Service') 	//实例化UserService





	'URL_HTML_SUFFIX'=>'shtml'			//-- 设置伪静态后缀名
	'URL_HTML_SUFFIX' => 'html|shtml|xml' 		//-- 设置多个伪静态后缀
	'URL_DENY_SUFFIX' => 'pdf|ico|png|gif|jpg',	//-- URL禁止访问的后缀设置,比URL_HTML_SUFFIX优先级高

    	'SESSION_AUTO_START' => true, 		//-- 是否开启session

    	'LOAD_EXT_CONFIG' => 'user,db', 	//-- 关联加载扩展配置文件(在config.php 同级创建的user.db文件)


	'DATA_CACHE_TIME'=>60,			//-- 设置缓存有效期


	'SHOW_PAGE_TRACE'=>FALSE,		//-- 是否显示页面trace信息


	'URL_CASE_INSENSITIVE'=>false,		//-- 访问地址是否区分大小写  默认false(区分大小写)



	

	'TMPL_ENGINE_TYPE'=>'Smarty',		//-- 设置使用Smarty引擎 



	"DATA_CACHE_TEYPE"=>'File',		//-- 修改缓存方式，默认是文件方式 
				支持：File | Db | Apc | Memcache | Shmop | Sqlite | Xcache | Apachenote | Eaccelerator |






模块相关：

	'DEFAULT_MODULE'=>'Home',		//-- 设置默认访问的模块

	'MODULE_DENY_LIST'=>array('Common','Runtime','home'),	//-- 禁止指定模块的访问

	'MODULE_ALLOW_LIST'=>array('Home','Admin','User'),	//-- 设置允许访问的模块列表

	'MULTI_MODULE'=>false,			//-- 设置多模块访问还是单模块访问


	



模板相关：

	'TMPL_L_DELIM'=>'<{', 			//-- 修改模板中变量定界符	
	'TMPL_R_DELIM'=>'}>', 


	'TMPL_TEMPLATE_SUFFIX'=>'.tpl', 	//-- 更改模板文件后缀名	默认为html


	'DEFAULT_V_LAYER' =>  'Mobile', 	// 设置默认的视图层为Mobile
			当视图层多元化时：将mobile设置为默认的视图层
				view 普通视图层目录
				mobile 手机端访问视图层目录

	'DEFAULT_THEME'=>'you',			//--设置主题模板
				1，要在view下创建一个主题文件夹‘you’
				2，将Index或其它模块整体复制到‘you’中
				3，当正常访问时就会默认访问这个'you'中主题模块


						//-- GET传参方式更改主题模板
	'DEFAULT_THEME'=>'my',
	'TMPL_DETECT_THEME'=>'true',		//自动侦测模板主题	
	'THEME_LIST'=>'you,my',			//支持的模板主题列表
			可用下列GET传参方式更改主题模板
				http://localhost/b/index.php/home/Bbb/index/t/my 
				http://localhost/b/index.php/home/Bbb/index/t/you 





控制器相关：

	'DEFAULT_C_LAYER' =>  'Controller'	//设置默认的控制层
	'CONTROLLER_LEVEL' =>  2,			//设置多级控制层，2是两层，可设置多层	
				├─Controller 访问控制器│
				├─User User分级（组）│
				│  ├─UserTypeController.class.php		//访问：http://serverName/Home/User/UserType
				│  │  ├─UserAuthController.class.php
				│ 
				├─Admin Admin分级（组）
				│  │  ├─UserController.class.php
				│  │  ├─ConfigController.class.php 
	
	'ACTION_SUFFIX' =>  'Action', 		//设置控制器内的方法后缀（用来解决重名冲突）
				
	'URL_PARAMS_BIND' =>  true, 		// URL变量绑定到操作方法作为参数
							支持地址书写方式 
							http://serverName/index.php?s=/Home/Blog/read/id/5
							http://serverName/index.php?s=/Home/Blog/archive/year/2013/month/11
							http://serverName/index.php?c=Blog&a=read&id=5
							http://serverName/index.php?c=Blog&a=archive&year=2013&month=11
	'URL_PARAMS_BIND_TYPE'  =>  1, 		// 设置参数绑定按照变量顺序绑定
				//该方式仅对PATHINFO地址有效 (不设置时，默认为变量名绑定方式)






	'URL_ROUTER_ON'   => true,		// 开启路由功能


	'DB_LIKE_FIELDS'=>'title|content' 	//-- 查询语句中条件自动变为模糊查询%%



	'AUTOLOAD_NAMESPACE' => array(		//注册新的命名空间
				'My'=>THINK_PATH.'My',		
				'One'=> THINK_PATH.'One',
				)
				
				配置了上面的AUTOLOAD_NAMESPACE后，如果我们实例化下面的类库
					new My\Net\IpLocation();
					new One\Util\Log();
				会自动加载对应的类库文件
					Think/My/Net/IpLocation.class.php
					Think/One/Util/Log.class.php








	'VAR_MODULE'            =>  'module',     		// 默认模块获取变量
	'VAR_CONTROLLER'        =>  'controller',   		// 默认控制器获取变量
	'VAR_ACTION'            =>  'action',    		// 默认操作获取变量

								//如果默认的变量设置和你的应用变量有冲突的话，你需要重新设置系统配置，




	'USER_TYPE'      => 2, 					//用户类型 
	'USER_AUTH_ID'   => 10, 				//用户认证ID    
	'USER_AUTH_TYPE' => 2,					//用户认证模式


   	 'USER_CONFIG'        => array(       			//二级配置
			 'USER_AUTH' => true,       
			 'USER_TYPE' => 2,    
			),
			
			
			
			
			
			
			
			

defined('THINK_PATH') or exit();
return  array(
    /* 应用设定 */
    'APP_USE_NAMESPACE'     =>  true,    // 应用类库是否使用命名空间
    'APP_SUB_DOMAIN_DEPLOY' =>  false,   // 是否开启子域名部署
    'APP_SUB_DOMAIN_RULES'  =>  array(), // 子域名部署规则
    'APP_DOMAIN_SUFFIX'     =>  '', // 域名后缀 如果是com.cn net.cn 之类的后缀必须设置    
    'ACTION_SUFFIX'         =>  '', // 操作方法后缀
    'MULTI_MODULE'          =>  true, // 是否允许多模块 如果为false 则必须设置 DEFAULT_MODULE
    'MODULE_DENY_LIST'      =>  array('Common','Runtime'),
    'CONTROLLER_LEVEL'      =>  1,
    'APP_AUTOLOAD_LAYER'    =>  'Controller,Model', // 自动加载的应用类库层 关闭APP_USE_NAMESPACE后有效
    'APP_AUTOLOAD_PATH'     =>  '', // 自动加载的路径 关闭APP_USE_NAMESPACE后有效

    /* Cookie设置 */
    'COOKIE_EXPIRE'         =>  0,       // Cookie有效期
    'COOKIE_DOMAIN'         =>  '',      // Cookie有效域名
    'COOKIE_PATH'           =>  '/',     // Cookie路径
    'COOKIE_PREFIX'         =>  '',      // Cookie前缀 避免冲突
    'COOKIE_SECURE'         =>  false,   // Cookie安全传输
    'COOKIE_HTTPONLY'       =>  '',      // Cookie httponly设置

    /* 默认设定 */
    'DEFAULT_M_LAYER'       =>  'Model', // 默认的模型层名称
    'DEFAULT_C_LAYER'       =>  'Controller', // 默认的控制器层名称
    'DEFAULT_V_LAYER'       =>  'View', // 默认的视图层名称
    'DEFAULT_LANG'          =>  'zh-cn', // 默认语言
    'DEFAULT_THEME'         =>  '',	// 默认模板主题名称
    'DEFAULT_MODULE'        =>  'House',  // 默认模块
    'DEFAULT_CONTROLLER'    =>  'User', // 默认控制器名称
    'DEFAULT_ACTION'        =>  'Login', // 默认操作名称
    'DEFAULT_CHARSET'       =>  'utf-8', // 默认输出编码
    'DEFAULT_TIMEZONE'      =>  'PRC',	// 默认时区
    'DEFAULT_AJAX_RETURN'   =>  'JSON',  // 默认AJAX 数据返回格式,可选JSON XML ...
    'DEFAULT_JSONP_HANDLER' =>  'jsonpReturn', // 默认JSONP格式返回的处理方法
    'DEFAULT_FILTER'        =>  'htmlspecialchars', // 默认参数过滤方法 用于I函数...

    /* 数据库设置 */
    'DB_TYPE'               =>  'mysql',     // 数据库类型
    'DB_HOST'               =>  '192.168.1.251', // 服务器地址
    'DB_NAME'               =>  'wedo',          // 数据库名
    'DB_USER'               =>  'root',      // 用户名
    'DB_PWD'                =>  'chunzhen',          // 密码
    'DB_PORT'               =>  '3306',        // 端口
    'DB_PREFIX'             =>  'tp_',    // 数据库表前缀
    'DB_PARAMS'          	=>  array(), // 数据库连接参数    
    'DB_DEBUG'  			=>  TRUE, // 数据库调试模式 开启后可以记录SQL日志
    'DB_FIELDS_CACHE'       =>  true,        // 启用字段缓存
    'DB_CHARSET'            =>  'utf8',      // 数据库编码默认采用utf8
    'DB_DEPLOY_TYPE'        =>  0, // 数据库部署方式:0 集中式(单一服务器),1 分布式(主从服务器)
    'DB_RW_SEPARATE'        =>  false,       // 数据库读写是否分离 主从式有效
    'DB_MASTER_NUM'         =>  1, // 读写分离后 主服务器数量
    'DB_SLAVE_NO'           =>  '', // 指定从服务器序号

    /* 数据缓存设置 */
    'DATA_CACHE_TIME'       =>  0,      // 数据缓存有效期 0表示永久缓存
    'DATA_CACHE_COMPRESS'   =>  false,   // 数据缓存是否压缩缓存
    'DATA_CACHE_CHECK'      =>  false,   // 数据缓存是否校验缓存
    'DATA_CACHE_PREFIX'     =>  '',     // 缓存前缀
    'DATA_CACHE_TYPE'       =>  'File',  // 数据缓存类型,支持:File|Db|Apc|Memcache|Shmop|Sqlite|Xcache|Apachenote|Eaccelerator
    'DATA_CACHE_PATH'       =>  TEMP_PATH,// 缓存路径设置 (仅对File方式缓存有效)
    'DATA_CACHE_KEY'        =>  '',	// 缓存文件KEY (仅对File方式缓存有效)    
    'DATA_CACHE_SUBDIR'     =>  false,    // 使用子目录缓存 (自动根据缓存标识的哈希创建子目录)
    'DATA_PATH_LEVEL'       =>  1,        // 子目录缓存级别

    /* 错误设置 */
    'ERROR_MESSAGE'         =>  '页面错误！请稍后再试～',//错误显示信息,非调试模式有效
    'ERROR_PAGE'            =>  '',	// 错误定向页面
    'SHOW_ERROR_MSG'        =>  false,    // 显示错误信息
    'TRACE_MAX_RECORD'      =>  100,    // 每个级别的错误信息 最大记录数

    /* 日志设置 */
    'LOG_RECORD'            =>  false,   // 默认不记录日志
    'LOG_TYPE'              =>  'File', // 日志记录类型 默认为文件方式
    'LOG_LEVEL'             =>  'EMERG,ALERT,CRIT,ERR',// 允许记录的日志级别
    'LOG_FILE_SIZE'         =>  2097152,	// 日志文件大小限制
    'LOG_EXCEPTION_RECORD'  =>  false,    // 是否记录异常信息日志

    /* SESSION设置 */
    'SESSION_AUTO_START'    =>  true,    // 是否自动开启Session
    'SESSION_OPTIONS'       =>  array(), // session 配置数组 支持type name id path expire domain 等参数
    'SESSION_TYPE'          =>  '', // session hander类型 默认无需设置 除非扩展了session hander驱动
    'SESSION_PREFIX'        =>  '', // session 前缀
    //'VAR_SESSION_ID'      =>  'session_id',     //sessionID的提交变量

    /* 模板引擎设置 */
    'TMPL_CONTENT_TYPE'     =>  'text/html', // 默认模板输出类型
    'TMPL_ACTION_ERROR'     =>  THINK_PATH.'Tpl/dispatch_jump.tpl', // 默认错误跳转对应的模板文件
    'TMPL_ACTION_SUCCESS'   =>  THINK_PATH.'Tpl/dispatch_jump.tpl', // 默认成功跳转对应的模板文件
    'TMPL_EXCEPTION_FILE'   =>  THINK_PATH.'Tpl/think_exception.tpl',// 异常页面的模板文件
    'TMPL_DETECT_THEME'     =>  false,       // 自动侦测模板主题
    'TMPL_TEMPLATE_SUFFIX'  =>  '.html',     // 默认模板文件后缀
    'TMPL_FILE_DEPR'        =>  '/', //模板文件CONTROLLER_NAME与ACTION_NAME之间的分割符
    // 布局设置
    'TMPL_ENGINE_TYPE'      =>  'Think',     // 默认模板引擎 以下设置仅对使用Think模板引擎有效
    'TMPL_CACHFILE_SUFFIX'  =>  '.php',      // 默认模板缓存后缀
    'TMPL_DENY_FUNC_LIST'   =>  'echo,exit',    // 模板引擎禁用函数
    'TMPL_DENY_PHP'         =>  false, // 默认模板引擎是否禁用PHP原生代码
    'TMPL_L_DELIM'          =>  '{',            // 模板引擎普通标签开始标记
    'TMPL_R_DELIM'          =>  '}',            // 模板引擎普通标签结束标记
    'TMPL_VAR_IDENTIFY'     =>  'array',     // 模板变量识别。留空自动判断,参数为'obj'则表示对象
    'TMPL_STRIP_SPACE'      =>  true,       // 是否去除模板文件里面的html空格与换行
    'TMPL_CACHE_ON'         =>  true,        // 是否开启模板编译缓存,设为false则每次都会重新编译
    'HTML_CACHE_ON'         =>  0,	     //模板缓存
    'TMPL_CACHE_PREFIX'     =>  '',         // 模板缓存前缀标识，可以动态改变
    'TMPL_CACHE_TIME'       =>  0,         // 模板缓存有效期 0 为永久，(以数字为值，单位:秒)
    'TMPL_LAYOUT_ITEM'      =>  '{__CONTENT__}', // 布局模板的内容替换标识
    'LAYOUT_ON'             =>  false, // 是否启用布局
    'LAYOUT_NAME'           =>  'layout', // 当前布局名称 默认为layout

    // Think模板引擎标签库相关设定
    'TAGLIB_BEGIN'          =>  '<',  // 标签库标签开始标记
    'TAGLIB_END'            =>  '>',  // 标签库标签结束标记
    'TAGLIB_LOAD'           =>  true, // 是否使用内置标签库之外的其它标签库，默认自动检测
    'TAGLIB_BUILD_IN'       =>  'cx', // 内置标签库名称(标签使用不必指定标签库名称),以逗号分隔 注意解析顺序
    'TAGLIB_PRE_LOAD'       =>  '',   // 需要额外加载的标签库(须指定标签库名称)，多个以逗号分隔 
    
    /* URL设置 */
    'URL_CASE_INSENSITIVE'  =>  true,   // 默认false 表示URL区分大小写 true则表示不区分大小写
    'URL_MODEL'             =>  1,       // URL访问模式,可选参数0、1、2、3,代表以下四种模式：
    // 0 (普通模式); 1 (PATHINFO 模式); 2 (REWRITE  模式); 3 (兼容模式)  默认为PATHINFO 模式
    'URL_PATHINFO_DEPR'     =>  '/',	// PATHINFO模式下，各参数之间的分割符号
    'URL_PATHINFO_FETCH'    =>  'ORIG_PATH_INFO,REDIRECT_PATH_INFO,REDIRECT_URL', // 用于兼容判断PATH_INFO 参数的SERVER替代变量列表
    'URL_REQUEST_URI'       =>  'REQUEST_URI', // 获取当前页面地址的系统变量 默认为REQUEST_URI
    'URL_HTML_SUFFIX'       =>  'html',  // URL伪静态后缀设置
    'URL_DENY_SUFFIX'       =>  'ico|png|gif|jpg', // URL禁止访问的后缀设置
    'URL_PARAMS_BIND'       =>  true, // URL变量绑定到Action方法参数
    'URL_PARAMS_BIND_TYPE'  =>  0, // URL变量绑定的类型 0 按变量名绑定 1 按变量顺序绑定
    'URL_PARAMS_FILTER'     =>  false, // URL变量绑定过滤
    'URL_PARAMS_FILTER_TYPE'=>  '', // URL变量绑定过滤方法 如果为空 调用DEFAULT_FILTER
    'URL_ROUTER_ON'         =>  false,   // 是否开启URL路由
    'URL_ROUTE_RULES'       =>  array(), // 默认路由规则 针对模块
    'URL_MAP_RULES'         =>  array(), // URL映射定义规则

    /* 系统变量名称设置 */
    'VAR_MODULE'            =>  'm',     // 默认模块获取变量
    'VAR_ADDON'             =>  'addon',     // 默认的插件控制器命名空间变量
    'VAR_CONTROLLER'        =>  'c',    // 默认控制器获取变量
    'VAR_ACTION'            =>  'a',    // 默认操作获取变量
    'VAR_AJAX_SUBMIT'       =>  'ajax',  // 默认的AJAX提交变量
    'VAR_JSONP_HANDLER'     =>  'callback',
    'VAR_PATHINFO'          =>  's',    // 兼容模式PATHINFO获取变量例如 ?s=/module/action/id/1 后面的参数取决于URL_PATHINFO_DEPR
    'VAR_TEMPLATE'          =>  't',    // 默认模板切换变量
    'VAR_AUTO_STRING'		=>	false,	// 输入变量是否自动强制转换为字符串 如果开启则数组变量需要手动传入变量修饰符获取变量

    'HTTP_CACHE_CONTROL'    =>  'private',  // 网页缓存控制
    'CHECK_APP_DIR'         =>  true,       // 是否检查应用目录是否创建
    'FILE_UPLOAD_TYPE'      =>  'Local',    // 文件上传方式
    'DATA_CRYPT_TYPE'       =>  'Think',    // 数据加密方式

);
