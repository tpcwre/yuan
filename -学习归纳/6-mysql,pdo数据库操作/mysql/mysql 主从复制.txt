


//===== 主从配置 

	一：配置主服务器mysql配置文件 /etc/my.cnf		(可将原配置文件复制过来并改名)
		
		log-bin=mysql-bin		开启binlog日志
		server-id   = 1			设置服务器编号


	二：设置主服务器远程账户

	     //- 设置可远程操作的用户
		mysql -uroot -p		//先登陆
		grant all privileges on *.* to 'aaa'@"%" identified by '123' with grant option;flush privileges;	//创建远程操作用户	
			//*.* 	可操作所有的库与表
			//aaa	创建的可远程登陆的用户名
			//%	指所有IP，可可指定某一IP
			//123 	远程登陆的密码
			//flush privileges	刷新mysql让命令立即生效
	     //- 查看用户创建是否成功
		use mysql;	//进入mysql库
		select host,user,password from user;	//查看创建的用户
		或
		select * from user\G
		
	     //- 在从机上连接主服看是否成功
		mysql -u aaa -h 120.27.124.48 -p	
		show databases;			//如果可以成功登陆并能查看到所有的库则说明远程登陆操作成功

	
	     
	三：配置从服务器 	/etc/my.cnf
		
		//- 配置从服务器配置文件
			log-bin=mysql-bin		开启binlog日志
			server-id   = 2			设置服务器编号

			配置后重启服务器

		
		//- 设置从服务器其它参数 

			reset master;
			show master status;	//查看主服务器配置参数，  file，Position字段要与 下面语句中master_log_file,master_log_pos，的值相对应

			change master to master_host='120.27.124.48',master_user='aaa',master_password='123',master_log_file='mysql-bin.000014',master_log_pos=120;
		
			start slave;	//运行从服务设置


			show slave status\G		//查看主从连接状态  下面两项都为yes 时则说明 主从设置成功！
				             	Slave_IO_Running: Yes
           	 				Slave_SQL_Running: Yes


		

	四：设置读写锁
		
		lock tables test read;		//设置test表的读锁，只能读不能写；
		flush tables with read lock;
	
		lock tables test write;		//设置test表的写锁，只能写不能读;

		unlock tables;			//解除表锁







	//laravel的主从，读写分享
			config\database.php里
			‘mysql‘ => array(
				‘read‘ => array(
					‘host‘ => ‘192.168.1.1‘,
				),
				‘write‘ => array(
					‘host‘ => ‘196.168.1.2‘
				),
				‘driver‘    => ‘mysql‘,
				‘database‘  => ‘database‘,
				‘username‘  => ‘root‘,
				‘password‘  => ‘‘,
				‘charset‘   => ‘utf8‘,
				‘collation‘ => ‘utf8_unicode_ci‘,
				‘prefix‘    => ‘‘,
			),










/usr/local/mysql/var/

mysql主从复制
（超简单）

怎么安装mysql数据库，这里不说了，只说它的主从复制，步骤如下：

1、主从服务器分别作以下操作：
  1.1、版本一致
  1.2、初始化表，并在后台启动mysql
  1.3、修改root的密码

2、修改主服务器master:
   #vi /etc/my.cnf
       [mysqld]
       log-bin=mysql-bin   //[必须]启用二进制日志
       server-id=222      //[必须]服务器唯一ID，默认是1，一般取IP最后一段

3、修改从服务器slave:
   #vi /etc/my.cnf
       [mysqld]
       log-bin=mysql-bin   //[不是必须]启用二进制日志
       server-id=226      //[必须]服务器唯一ID，默认是1，一般取IP最后一段

4、重启两台服务器的mysql
   /etc/init.d/mysql restart

5、在主服务器上建立帐户并授权slave:
   #/usr/local/mysql/bin/mysql -uroot -pmttang  
   mysql>GRANT REPLICATION SLAVE ON *.* to 'mysync'@'%' identified by 'xiaodong123'; 
	//一般不用root帐号，&ldquo;%&rdquo;表示所有客户端都可能连，只要帐号，密码正确，此处可用具体客户端IP代替，如192.168.145.226，加强安全。

6、登录主服务器的mysql，查询master的状态
   mysql>show master status;
   +------------------+----------+--------------+------------------+
   | File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
   +------------------+----------+--------------+------------------+
   | mysql-bin.000004 |      308 |              |                  |
   +------------------+----------+--------------+------------------+
   1 row in set (0.00 sec)
   注：执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化

7、配置从服务器Slave：
   mysql>change master to master_host='10.174.244.239',master_user='tpcwre2',master_password='xiaodong123',master_log_file='mysql-bin.000011',master_log_pos=586;   
	
	//注意不要断开，308数字前后无单引号。

   Mysql>start slave;    //启动从服务器复制功能

8、检查从服务器复制功能状态：

   mysql> show slave status\G

   *************************** 1. row ***************************

              Slave_IO_State: Waiting for master to send event
              Master_Host: 192.168.2.222  //主服务器地址
              Master_User: mysync   //授权帐户名，尽量避免使用root
              Master_Port: 3306    //数据库端口，部分版本没有此行
              Connect_Retry: 60
              Master_Log_File: mysql-bin.000004
              Read_Master_Log_Pos: 600     //#同步读取二进制日志的位置，大于等于Exec_Master_Log_Pos
              Relay_Log_File: ddte-relay-bin.000003
              Relay_Log_Pos: 251
              Relay_Master_Log_File: mysql-bin.000004
              Slave_IO_Running: Yes    //此状态必须YES
              Slave_SQL_Running: Yes     //此状态必须YES
                    ......

注：Slave_IO及Slave_SQL进程必须正常运行，即YES状态，否则都是错误的状态(如：其中一个NO均属错误)。

如果出现错误：
	Slave_IO_Running:no
	解决方法：可能是两个数据库的auto.conf文件中的 uuid重名了。进入从库将uuid修改一下即可


以上操作过程，主从服务器配置完成。
 
9、主从服务器测试：

主服务器Mysql，建立数据库，并在这个库中建表插入一条数据：

  mysql> create database hi_db;
  Query OK, 1 row affected (0.00 sec)

  mysql> use hi_db;
  Database changed

  mysql>  create table hi_tb(id int(3),name char(10));
  Query OK, 0 rows affected (0.00 sec)
 
  mysql> insert into hi_tb values(001,'bobu');
  Query OK, 1 row affected (0.00 sec)

  mysql> show databases;
   +--------------------+
   | Database           |
   +--------------------+
   | information_schema |
   | hi_db                |
   | mysql                |
   | test                 |
   +--------------------+
   4 rows in set (0.00 sec)

从服务器Mysql查询：

   mysql> show databases;

   +--------------------+
   | Database               |
   +--------------------+
   | information_schema |
   | hi_db                 |       //I'M here，大家看到了吧
   | mysql                 |
   | test          |

   +--------------------+
   4 rows in set (0.00 sec)

   mysql> use hi_db
   Database changed
   mysql> select * from hi_tb;           //查看主服务器上新增的具体数据
   +------+------+
   | id   | name |
   +------+------+
   |    1 | bobu |
   +------+------+
   1 row in set (0.00 sec)
 

10、完成：
    编写一shell脚本，用nagios监控slave的两个yes（Slave_IO及Slave_SQL进程），如发现只有一个或零个yes，就表明主从有问题了，发短信警报吧。

本文出自 “系统网络运维” 博客，请务必保留此出处http://369369.blog.51cto.com/319630/790921







//===报错
	This operation cannot be performed with a running slave; run STOP SLAVE first

	解决： stop slave 	关闭重服务后再执行其它


