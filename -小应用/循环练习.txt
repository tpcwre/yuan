

//===== 3,多文件上传		   (见案例3)	-
//===== 4,万年历-正则改配置文件	   (见案例4)	-	
//===== 5,简单留言板		   (见案例5)	-







修改后

//===== 元素的拖动
//===== 放大镜
//===== 滚动字幕和图片轮播

//===== JS 多下拉列表关联控制

//=====冒泡排序法

//=====选择排序法

//=====插入排序法

//=====快速排序法

//=====二分查找法

//=====COOKIE显示上次登陆时间
//===== PDO 普通及预处理操作数据库
//===== 分页
//===== 错误机制
//===== 变量形式的回调函数
//===== 验证码简化练习
//===== 九九乘法表与空心菱型 	
//====== 字符串的增删改
//===== 正则简化练习
//===== 文件操作

	文件上传
	文件下载
	创建多级目录与文件并添加内容
	删除多级目录与文件及获取目录大小
	移动或重命名目录
	拷贝目录
	文件做容器的计数器








session的增删改查














































	
	





















































//===== JS 多下拉列表关联控制

		<script>
			var city = new Array();
			city[1]=["昌平区","东城区","朝阳区","海淀区"];
			city[2]=["虹口区","浦东区","宝山区","松江区"];
			city[3]=["河东区","河西区","河北区","和平区"];
			city[4]=["南沙区","天河区","白云区","花都区"];
			function fun(ob){
				var v = ob.value;
				var sel2 = document.myForm.sel2;
				sel2.length=1;
				for(var i=0;i<city[v].length;i++){
					sel2.add(new Option(city[v][i],i));
				}
			}
		</script>
		<form name='myForm' action='4.html' method='post' >
			<select name='sel1' onchange="fun(this)">
				<option value="">-请选择-</option>
				<option value="1">北京</option>
				<option value="2">上海</option>
				<option value="3">天津</option>
				<option value="4">广州</option>
			</select>
			<select name='sel2'>
				<option value="">-请选择</option>
			</select>
		</form>



















//===== 九九乘法表与空心菱型



	//-- 九九乘法表

for($i=1;$i<=9;$i++){
	for($j=1;$j<=$i;$j++){
		echo $j."*".$i."=".$i*$j." ";
	}
	echo "<br>";
}


	
	//--空心菱型

$b=45;
for($i=1;$i<$b;$i++){
	for($k=1;$k<$b-$i+40;$k++){
		echo "&nbsp";
	}
	echo "*";
	for($j=1;$j<$i*2-2;$j++){
		echo "&nbsp";
	}
	if($i!=1){
	echo "*";
	}
	echo "<br>";
}
for($i=1;$i<$b;$i++){
	for($k=1;$k<$i+40;$k++){
		echo "&nbsp";
	}
	echo "*";
	for($j=1;$j<($b-$i)*2-2;$j++){
		echo "&nbsp";
	}
	if($b-$i!=1){
	echo "*";
	}
	echo "<br>";
}


	//菱型2

	echo "<br><br>空心菱形<br><br>";
		
	for($i=0;$i<$a;$i++){
		for($j=0;$j<$a-$i+50;$j++){
			echo "&nbsp";
		}
		echo "*";
		for($j=0;$j<$i*2-1;$j++){
			echo "&nbsp";
		}
		if($i!=0){
			echo "*";
		}	
		echo "<br>";
	}
	for($i=0;$i<$a+1;$i++){
		for($j=0;$j<$i+50;$j++){
			echo "&nbsp";
		}
		echo "*";
		for($j=0;$j<($a-$i)*2-1;$j++){
			echo "&nbsp";
		}
		if($i!=$a){
			echo "*";
		}
		echo "<br>";
	}














//===== 文件操作

	文件上传
	文件下载
	创建多级目录与文件并添加内容
	删除多级目录与文件及获取目录大小
	移动或重命名目录
	拷贝目录
	文件做容器的计数器







//===== 文件上传


echo "<form action='' method='post' enctype='multipart/form-data'>";
	echo "<input type='file' name='file' />";
	echo "<input type='file' name='file[]' />";	//多文件上传
	echo "<input type='submit' value='上传' />";
echo "</form>";

$name=$_FILES['file']['name'];
$tmp=$_FILES['file']['tmp_name'];
$type=$_FILES['file']['type'];
$size=$_FILES['file']['size'];
$error=$_FILES['file']['error'];
if($size > 10){
	echo "文件过大<br>";
}

$types=array('image/jpeg','image/png','image/gif');
if(in_array($type,$types)){
	echo "文件类型不正确<br>";
}
$exts=array('jpg','jpeg','gif','png','JPG','JPEG','PNG','GIF');
$ext=pathinfo($name,PATHINFO_EXTENSION);
if(in_array($ext,$exts)){
	echo "文件格式不正确<br>";
}
if(is_uploaded_file($tmp)){
	echo "文件上传非法<br>";
	if(move_uploaded_file($tmp,$name)){
		echo "文件上传成功！";
	}else{
		echo "文件上传失败";
	}
}







//===== 文件下载

//download('./img/5.jpg');
function download($path){
	header("content-type:text/html;charset=utf-8"); 		//设置页面使用编码集
	$name=pathinfo($path,PATHINFO_BASENAME);
	header("content-disposition:attachment;filename={$name}"); 	//设置浏览类型为附件，并指定文件名
	$size=filesize($path);					   	//获取文件大小
	header("content-length:".$size);				//在页面显示文件大小
	readfile($path);						//读取被下载的页面
}



<?php
	header("content-type:text/html;charset=utf-8");	
							
	header("content-disposition:attacment;filename=2.jpg");
							 
	$size=filesize("2.jpg");
							
	header("content-length:".$size);		
	readfile("2.jpg");				
?>











$path="a/b/c/d/e";
$dir='./a';
	
//mkd($path);
//rmd('./a');






//===== 创建多级目录与文件并添加内容

function mkd($path){
	if(!is_dir($path)){						//判断是否为文件夹
		mkdir($path,0755,true);				//创建一个文件夹
		$fp=fopen($path."/e.txt",'a+');		//创建文件（以读写方式打开文件）
		fwrite($fp,'aaaaaaaabbbbbbbbbbbbaaaaaaaabbbbbbbbbbbb');
		fclose($fp);
	}
	if(file_exists($path."/e.txt")){
		echo "文件创建成功!<br>";
	}else{
		echo "创建失败或文件以存在！<br>";
	}
	$fp=fopen($path."/e.txt",'r');
	while(!feof($fp)){
		echo fgetc($fp).'<br>';
	}
}




//===== 删除多级目录与文件及获取目录大小

function rmd($path){
	$op=opendir($path);
	$size=0;
	while($od=readdir($op)){
		if($od=='.' || $od=='..'){
			continue;
		}
		$pathn=$path.'/'.$od;
		if(is_dir($pathn)){
			rmd($pathn);
			rmdir($pathn);
		}else{
			$size += filesize($pathn);		//累加文件大小
			unlink($pathn);
		}
	}
	echo "目录总大小为{$size}<br>";
	closedir($op);
	echo "目录删除成功!";
}





//===== 移动或重命名目录

//redir('./a','./aa');
function redir($p1,$p2){
	if(is_dir($p1)){
		rename($p1,$p2);
		if(is_dir($p2)){
			echo "重命名或剪切目录成功!";
		}
	}else{
		echo "文件夹不存在!";
	}
	
}




//===== 拷贝目录


//echo cpdir('./aa','./aaa');
function cpdir($p1,$p2){
	if(!is_dir($p1)){
		echo "文件夹不存在!";
		return;
	}
	$od=opendir($p1);
	while($ot=readdir($od)){
		if($ot=='.' || $ot== '..'){
			continue;
		}
		$path1=$p1.'/'.$ot;
		$path2=$p2.'/'.$ot;
		if(is_dir($path1)){
			if(!is_dir($path2)){
				mkdir($path2,0755,true);
			}
			cpdir($path1,$path2);
		}else{
			copy($path1,$path2);
		}
	}
	closedir($od);
	return is_dir($p2)?'拷贝成功！':'拷贝失败';
}



//===== 文件做容器的计数器

counts();
function counts(){
	if(!is_file('./counts')){
		file_put_contents('./counts',0);
	}
	$gc=file_get_contents('./counts');
	echo $gc;
	$gc ++;
	file_put_contents('./counts',$gc);
}











//===== 正则简化练习


	// 正则匹配方式一： preg_match_all()

	$str="kljfsa;lshttp://www.baidu.com/ajf;laksfhgivkngrek gkmp3.baidu.comgreg he e";
	$pattern="/http\:\/\/www\.[\w]*\.[A-z]{2,3}/";
	preg_match_all($pattern,$str,$result);
	echo "<pre>";
	var_dump($result);
	
	// 结果：
		// array(1) {
		  // [0]=>
		  // array(1) {
			// [0]=>
			// string(20) "http://www.baidu.com"
		  // }
		// }
	


	

	
	// 正则匹配方式二： preg_replace()

	$str="a"sdfl;sfwww.baidu.com;lsadfjlsajf";
	echo $str."<br>";
	$pattern="/[A-z]{3}\.(.*)\.[A-z]{2,3}/";
	$restr="mp3.sina.cn";
	
	$result= preg_replace($pattern,$restr,$str);
	echo $result;
	
	// 结果：
		// a"sdfl;sfwww.baidu.com;lsadfjlsajf
		// a"sdfl;sfmp3.sina.cn;lsadfjlsajf












//====== 字符串的增删改

//--字符串的增

$str="abcdefg";
echo substr_replace($str,"KKK",3,0); 
//abcKKKdefg 


//--字符串的删
$str="abcdefg";
echo substr_replace($str,"",2);	//ab   
//echo substr_replace($str,"",2,-1); 
//abg 


//--字符串的改
$str="abcdefg";
echo substr_replace($str,"aa",1,2);	
//aaadefg 

















//===== 验证码简化练习


<?php
	header("content-type:text/html;charset=utf-8");
	$img=imagecreatetruecolor(120,50);
	$bgcolor=imagecolorallocate($img,255,255,0);
	imagefill($img,0,0,$bgcolor);
	for($i=0;$i<700;$i++){
		$pcolor=imagecolorallocate($img,rand(0,255),rand(0,255),rand(0,255));
		$x=rand(0,120);
		$y=rand(0,50);
		imagesetpixel($img,$x,$y,$pcolor);
	}
	$str='abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
	$text='';
	for($i=0;$i<4;$i++){
		$text.=$str[rand(0,strlen($str)-1)];
	}
	$tcolor=imagecolorallocate($img,255,0,255);
	imagettftext($img,20,0,32,35,$tcolor,'./simfang.ttf',$text);
	//echo $text.'<br>';
	//echo strtolower($text);
	//验证码不区分大小写时，可以将转化小写前后的两种码都存入session,然后用in_array()来判断即可
	header('content-type:image/jpeg');
	imagejpeg($img);
	imagedestroy($img);
	






	
	
	

//===== 错误机制


	//--php.ini 中配置错误提示

	1：error_reporting = E_ALL			// 设置开启哪个级别的错误提示 
			     E_ALL			// 显示所有错误级别的错误提示
			     E_ALL & ~E_NOTICE		// 显示除提示级别以外的所有错误提示
			     E_ALL & ~E_NOTICE & ~E_STRICT	
		
	2：display_errors = Off 		// 设置是否显示错误报告。
			    Off / On		// 开启/关闭
						
	3：log_errors = On 			// 是否启用错误日志
			Off / On			// 开启/关闭
					
	4：error_log = " ";			//设置错误日志存储的的路径和文件名
	   error_log = "C:\xampp\php\logs\php113"	//指定错误存储的位置及文件名
	   error_log = syslog			 //设置开启系统日志 
			//系统日志查看方式：右键-》我的电脑-》系统工具-》事件查看器-》应用程序：右侧的信息


	//--脚本中配置错误设置

	ini_set("display_errors","off");		//开启错误提示
				  On			 	//关闭

	error_reporting(E_ALL);				//显示所有级别的全部错误提示
	error_reporting(E_ALL &~E_NOTICE);		//显示除提示级别以外的全部错误提示
				  WARNING			//除警告级别以外
				  ERROR				//除致命级别以外

	var_dump(ini_get("display_errors"));		//获取错误提示是否开启   
	var_dump(ini_get("ini_reporting"));		//获取错误级别的提示范围
	var_dump(ini_get("log_errors"));		//获取是否开启错误提示日志

	var_dump(ini_get_all());			//脚本中获取所有配置选项













//===== 变量形式的回调函数

<?php
	aaa(20,"bb1");
	function aaa($num,$fn){			//主体函数 
		for($i=0;$i<$num;$i++){		//遍历给定的值
			if($fn($i)){			//调用辅助函数并判断函数返回的结果是否为真
				continue;			//结果为真就越过本次循环
			}
			echo $i."<br>";			//显示遍历的数值 
		}
	}
	function bb1($number){			//辅助函数
		if($number%3==0){			//判断给定的值是否匹配条件
			return true;			//如果匹配条件返回真
		}else{
			return false;			//如果不匹配条件返回假
		}
	}
?>











//=====  分页


<?php
	$rowc=300;		//总条数据
											
	$mp=10;												//每页条数
	$pnum=ceil($rowc/$mp);								//总页数
	
	$pnow =empty($_GET['pnow'])?1:$_GET['pnow'];		//当前页
	
	$limit=($pnow-1)*$mp;								//数据库查询基数
	

	echo "<a class='pages_next' href='a.php?pnow=1'> 首页 </a>";

	if($pnum<5){	//当最大页小于5 
		$min=1;			//遍历最小数就为1
		$max=$pnum;		//遍历最大数就为总页数
	}else{			//当最大页大于5
		if($pnow<$pnum-5){		//如果当前页小于总页-5
			$min=$pnow;				//最小遍历数为当前页
			$max=$min+4;			//最大遍历数为当前页+4
		}else{					//如果当前页大于最大页减5
			$min=$pnum-4;			//最小遍历数为最大页-4
			$max=$pnum;				//最大遍历数为最大页
		}
	}
	echo "<a class='pages_next' href='a.php?pnow=1'> 首页 </a>";
	$prev=($pnow-1)<=0?1:$pnow-1;	//限制下页不要超过最大页
	echo "<a class='pages_next' href='a.php?pnow={$prev}'> 上一页</a>";
	
	for($i=$min;$i<=$max;$i++){
		if($i==$pnow){
		echo "<a href='a.php?pnow={$i}'><b>{$i}</b></a> ";
		}else{
		echo "<a href='a.php?pnow={$i}'>{$i}</a> ";
		}
	}
	$pnext=($pnow+1)<$pnum?$pnow+1:$pnum;	//限制下页不要超过最大页
	echo "<a class='pages_next' href='a.php?pnow={$pnext}'> 下一页</a>";
	echo "<a class='pages_next' href='a.php?pnow={$pnum}'> 尾页 </a>";
	echo ".....{$pnum}";
?>


























//===== PDO 普通及预处理操作数据库


	<?php
	try{
		$pdo= new PDO("mysql:host=localhost;dbname=test1",'root','1234567');
		$pdo->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING);
		$pdo->query("set names utf8");	
	}catch(PDOException $e){
		die($e->getMessage());
	}



	//========== PDO 普通操作 增删改查


	//----- 查询数据 

	$sql="select * from user where id > ((select max(id) from user)-5)";
	$stmt= $pdo->query($sql);
	$list = $stmt->fetchAll(PDO::FETCH_ASSOC);	//查询多条(关联方式)
	
	$sql2="select max(id) from user";
	$stmt2=$pdo->query($sql2);
	$mid = $stmt2->fetch(PDO::FETCH_NUM)[0];		//查询单条(索引方式)
	echo $mid.'<br>';
	
	foreach($list as $v){
		print_r($v);
		echo "<br>";
	}

	
	
	
	
	//----- 添加数据

	//$sql="insert into user(name,age) values('a','10')";	//= 添加数据
	//$sql="delete from user where id=618"; 				//= 删除数据
	$sql="update user set name='aa' where id=619";			//= 修改数据
	$stmt=$pdo->exec($sql);
	echo $stmt>0?'操作成功':'操作失败';
	echo "<hr><hr><hr>";
	
	
	
	//========== PDO 预处理 增删改查


	//----- 预处理查询数据
	
	$cid=$mid-5;	//设置查询最后五条数据
	$sql="select * from user where id>?";
	$stmt=$pdo->prepare($sql);		//预处理语句
	if($stmt->execute(array($cid))){	//用数组方式传值给占位符并判断是否成功
		$list = $stmt->fetchAll(PDO::FETCH_ASSOC);	//获取数据
		//$list = $stmt->fetch(PDO::FETCH_ASSOC);	//查询单条数据
		foreach($list as $v){
			print_r($v);
			echo "<br>";
		}
	}
	
	
	
	
	//----- 预处理 添加数据
	
	$sql="insert into user(name,age) values(?,?)";  //占位符方式一： ？ 
	$stmt=$pdo->prepare($sql);		// 提交预处理语句
	$stmt->bindValue(1,'tingjie');	// 传值方式一：绑定值
	$stmt->bindParam(2,$age);		// 传值方式二：绑定变量
	$age=23;
	$sex=1;
	//$stmt->execute();			// 执行sql语句
	echo $pdo->lastInsertId()>0?"预添加成功":"预添加失败";	//判断新添加的ID是否存在 
	echo "<br>";
	
	
	//----- 预处理 删除数据
	
	$did=$mid-3;
	$sql = "delete from user where id > :id";		//占位符方式二： 别名
	$stmt=$pdo->prepare($sql);
	$stmt->bindValue('id',$did);				// 使用别名传值
	//$stmt->execute();
	echo $stmt->rowCount()>0?'预删除成功':'预删除失败';	// 判断受影响的行数
	echo "<br>";
	
	
	
	//----- 预处理 修改数据 
	
	$sql="update user set name=:name,age=:age where id>:id";
	$stmt=$pdo->prepare($sql);
	$stmt->bindValue("name",'xiuGai');		//别名+绑值
	$stmt->bindValue('age',22);
	$stmt->bindValue("id",$did);
	//$stmt->bindValue("limit",2);
	$stmt->execute();
	echo $stmt->rowCount()>0?"修改成功":"修改失败";
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	






//=====冒泡排序法

	echo "冒泡排序法<br>";
	//内层循环两两比较，获得相对最大值放在最后
	//外层循环冒几次

function bubbleSort($arr){
	$temp=0;
	for($i=0;$i<count($arr)-1;$i++){
		for($j=0;$j<count($arr)-1;$j++){
			if($arr[$j]>$arr[$j+1]){
				$temp=$arr[$j+1];
				$arr[$j+1]=$arr[$j];
				$arr[$j]=$temp;
			}
		}
	}
}

	$b=array(11,33,55,77,99,22,44,66,88,00);
	bubbleSort(&$b);	
	foreach($b as $v){
		echo $v."\n";
	}
	//&代表函数可以改变原有数据

	









//=====选择排序法
	//外层遍历循环的次数，
	//每次选出最小值，并调换到本次循环的首位

function selectSort($arr){
	$temp=0;
	for($i=0;$i<count($arr)-1;$i++){
		$minv=$arr[$i];				//设置一个最小值
		$mink=$i;				//设置一个最小k
		for($j=$i+1;$j<count($arr);$j++){
			if($minv>$arr[$j]){
				$minv=$arr[$j];		//遍历并比对保存比当前还小的值和那个位置k
				$mink=$j;
			}
		}
		$temp=$arr[$i];				//将首值保存到变量
		$arr[$i]=$minv;				//再将首值赋值为比对后的最小值
		$arr[$mink]=$temp;			//再将转存的首值赋值给那个原为最小值位置的元素
	}
}

	$s=array(12,32,52,72,92,22,42,62,82,02);
	selectSort(&$s);	
	foreach($s as $v){
		echo $v."\n";
	}
	//&代表函数可以改变原有数据
	
	
	












	
//=====插入排序法

function insertSort($arr){
	for($i=1;$i<count($arr);$i++){				//遍历
		$val=$arr[$i];					//存首值
		$key=$i-1;					//存前标
		while($key>=0 && $val<$arr[$key]){		//循环判断前一个下标如果大于0 与 转首值小于前一个值
			$arr[$key+1]=$arr[$key];		//将首元素赋值为前一个元素值
			$key--;					//前下标减一
		}
		$arr[$key+1]=$val;				//首值=转首值
	}
}

	$in=array(33,13,53,73,93,23,43,63,83,03);
	insertSort(&$in);	
	foreach($in as $v){
		echo $v."\n";
	}
	//&代表函数可以改变原有数据
	
	
















	
//=====快速排序法

function quick(&$arr){
	if(!isset($arr[1])) return $arr;	//判断是否为一个数组
	$mid = $arr[0];		//设置一个基准值
	$l=array();
	$r=array();
	foreach($arr as $v){
		if($v<$mid){
			$l[]=$v;
		}
		if($v>$mid){
			$r[]=$v;
		}
	}
	$l[]=$mid;
	$l=quick($l);
	$r=quick($r);
	return array_merge($l,$r);
}
	
	
	
	
	
















//=====二分查找法

	function search($arr,$v,$l,$r){
		$m=round(($r+$l)/2);
		if($l>$r){
			echo "数值不存在！";
			return;
		}
		
		if($v>$arr[$m]){
			search($arr,$v,$m+1,$r);
		}
		if($v<$arr[$m]){
			search($arr,$v,$l,$m-1);
		}
		if($v==$arr[$m]){
			echo "您找的数值是$v,下标是：$m";
		}
	}

	$arr2=array(1,2,3,4,5,6,7,8,9,10);
	search($arr2,8,0,count($arr2));	
	
	























//=====COOKIE显示上次登陆时间
	if(!empty($_COOKIE['lasttime'])){
		echo "您上次的登陆时间是：".$_COOKIE['lasttime'];
		
		setCookie("lasttime",date("Y-m-d H:i:s"),time()+3600);
	}else{
		echo "欢迎您首次访问本站!";
		setCookie("lasttime",date("Y-m-d H:i:s"),time()+3600);
		
	}




	
	
	
	
	

	
	
	